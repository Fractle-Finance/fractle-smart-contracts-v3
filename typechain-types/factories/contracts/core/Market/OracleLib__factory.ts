/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  OracleLib,
  OracleLibInterface,
} from "../../../../contracts/core/Market/OracleLib";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "target",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "oldest",
        type: "uint32",
      },
    ],
    name: "OracleTargetTooOld",
    type: "error",
  },
  {
    inputs: [],
    name: "OracleUninitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "OracleZeroCardinality",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "blockTimestamp",
            type: "uint32",
          },
          {
            internalType: "uint216",
            name: "lnImpliedRateCumulative",
            type: "uint216",
          },
          {
            internalType: "bool",
            name: "initialized",
            type: "bool",
          },
        ],
        internalType: "struct OracleLib.Observation",
        name: "last",
        type: "tuple",
      },
      {
        internalType: "uint32",
        name: "blockTimestamp",
        type: "uint32",
      },
      {
        internalType: "uint96",
        name: "lnImpliedRate",
        type: "uint96",
      },
    ],
    name: "transform",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "blockTimestamp",
            type: "uint32",
          },
          {
            internalType: "uint216",
            name: "lnImpliedRateCumulative",
            type: "uint216",
          },
          {
            internalType: "bool",
            name: "initialized",
            type: "bool",
          },
        ],
        internalType: "struct OracleLib.Observation",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6111ce61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100925760003560e01c80635d276259116100655780635d27625914610159578063b8d236ac1461017a578063ca7dab2c1461018d578063f8500bcc146101dc57600080fd5b80631dd421ce14610097578063335129ad146100c05780634af74b68146100eb578063587cdc0614610126575b600080fd5b6100aa6100a5366004610bc9565b6101fc565b6040516100b79190610cc3565b60405180910390f35b6100d36100ce366004610d10565b6102fa565b6040516001600160d81b0390911681526020016100b7565b8180156100f757600080fd5b5061010b610106366004610d55565b61047a565b6040805161ffff9384168152929091166020830152016100b7565b81801561013257600080fd5b50610146610141366004610d7e565b6105f5565b60405161ffff90911681526020016100b7565b61016c610167366004610dba565b6106bd565b6040516100b7929190610e07565b61016c610188366004610e65565b61089c565b81801561019957600080fd5b5061010b6101a8366004610ec3565b6040805160608101825263ffffffff9290921680835260006020840152600192909101829052600160f81b17909155908190565b6101ef6101ea366004610eef565b610a91565b6040516100b79190610f98565b60608161ffff1660000361023c576040517f6a86842100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b845167ffffffffffffffff81111561025657610256610b36565b60405190808252806020026020018201604052801561027f578160200160208202803683370190505b50905060005b81518110156102ef576102b588888884815181106102a5576102a5610fcc565b60200260200101518888886102fa565b8282815181106102c7576102c7610fcc565b6001600160d81b03909216602092830291909101909101526102e881610ff8565b9050610285565b509695505050505050565b60008463ffffffff16600003610394576000878461ffff1661ffff811061032357610323610fcc565b60408051606081018252919092015463ffffffff80821680845264010000000083046001600160d81b03166020850152600160f81b90920460ff16151593830193909352909250908816146103895761037d818887610a91565b60200151915050610470565b602001519050610470565b60006103a08688611030565b90506000806103b28a8489898961089c565b91509150816000015163ffffffff168363ffffffff16036103db57506020015191506104709050565b806000015163ffffffff168363ffffffff160361040057602001519250610470915050565b8151815161040e9190611030565b63ffffffff168260000151846104249190611030565b63ffffffff168360200151836020015161043e9190611054565b6001600160d81b03166104519190611074565b61045b91906110a1565b826020015161046a91906110b5565b93505050505b9695505050505050565b6000806000888861ffff1661ffff811061049657610496610fcc565b60408051606081018252919092015463ffffffff80821680845264010000000083046001600160d81b03166020850152600160f81b90920460ff1615159383019390935290925090881690036104f257878592509250506105ea565b8461ffff168461ffff1611801561051a575061050f6001866110d5565b61ffff168861ffff16145b156105275783915061052b565b8491505b816105378960016110f0565b610541919061110b565b925061054e818888610a91565b898461ffff1661ffff811061056557610565610fcc565b82519101805460208401516040909401511515600160f81b027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6001600160d81b03909516640100000000027fff0000000000000000000000000000000000000000000000000000000000000090921663ffffffff909416939093171792909216179055505b965096945050505050565b60008261ffff16600003610635576040517fdc14e8a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8261ffff168261ffff161161064b5750816106b6565b825b8261ffff168161ffff16146106b1576001858261ffff1661ffff811061067557610675610fcc565b0180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000001663ffffffff9290921691909117905560010161064d565b508190505b9392505050565b6040805160608082018352600080835260208084018290528385018290528451928301855281835282018190529281018390529091836106fe8660016110f0565b610708919061110b565b61ffff169050600060018561ffff1683610722919061112c565b61072c919061113f565b905060005b600261073d838561112c565b61074791906110a1565b90508861075861ffff881683611152565b61ffff811061076957610769610fcc565b60408051606081018252919092015463ffffffff8116825264010000000081046001600160d81b03166020830152600160f81b900460ff16151591810182905295506107c1576107ba81600161112c565b9250610731565b8861ffff87166107d283600161112c565b6107dc9190611152565b61ffff81106107ed576107ed610fcc565b60408051606081018252919092015463ffffffff808216835264010000000082046001600160d81b03166020840152600160f81b90910460ff161515928201929092528651909550898216911611801590819061085a5750846000015163ffffffff168963ffffffff1611155b156108655750610890565b8061087c5761087560018361113f565b925061088a565b61088782600161112c565b93505b50610731565b50505094509492505050565b60408051606081018252600080825260208201819052918101919091526040805160608101825260008082526020820181905291810191909152868461ffff1661ffff81106108ed576108ed610fcc565b60408051606081018252919092015463ffffffff80821680845264010000000083046001600160d81b03166020850152600160f81b90920460ff161515938301939093529093509087161061096257815163ffffffff878116911614610a875781610959838888610a91565b91509150610a87565b868361096f8660016110f0565b610979919061110b565b61ffff1661ffff811061098e5761098e610fcc565b60408051606081018252919092015463ffffffff8116825264010000000081046001600160d81b03166020830152600160f81b900460ff1615159181018290529250610a155760408051606081018252885463ffffffff8116825264010000000081046001600160d81b03166020830152600160f81b900460ff1615159181019190915291505b816000015163ffffffff168663ffffffff161015610a765781516040517f9ca3426c00000000000000000000000000000000000000000000000000000000815263ffffffff8089166004830152909116602482015260440160405180910390fd5b610a82878786866106bd565b915091505b9550959350505050565b604080516060810182526000808252602082018190529181019190915260405180606001604052808463ffffffff168152602001856000015185610ad59190611030565b610af39063ffffffff166bffffffffffffffffffffffff8616611166565b8660200151610b0291906110b5565b6001600160d81b031681526001602090910152949350505050565b803563ffffffff81168114610b3157600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610b9357610b93610b36565b604052919050565b80356bffffffffffffffffffffffff81168114610b3157600080fd5b803561ffff81168114610b3157600080fd5b60008060008060008060c08789031215610be257600080fd5b863595506020610bf3818901610b1d565b9550604088013567ffffffffffffffff80821115610c1057600080fd5b818a0191508a601f830112610c2457600080fd5b813581811115610c3657610c36610b36565b8060051b9150610c47848301610b4c565b818152918301840191848101908d841115610c6157600080fd5b938501935b83851015610c8657610c7785610b1d565b82529385019390850190610c66565b809950505050505050610c9b60608801610b9b565b9250610ca960808801610bb7565b9150610cb760a08801610bb7565b90509295509295509295565b6020808252825182820181905260009190848201906040850190845b81811015610d045783516001600160d81b031683529284019291840191600101610cdf565b50909695505050505050565b60008060008060008060c08789031215610d2957600080fd5b86359550610d3960208801610b1d565b9450610d4760408801610b1d565b9350610c9b60608801610b9b565b60008060008060008060c08789031215610d6e57600080fd5b86359550610d3960208801610bb7565b600080600060608486031215610d9357600080fd5b83359250610da360208501610bb7565b9150610db160408501610bb7565b90509250925092565b60008060008060808587031215610dd057600080fd5b84359350610de060208601610b1d565b9250610dee60408601610bb7565b9150610dfc60608601610bb7565b905092959194509250565b825163ffffffff1681526020808401516001600160d81b03169082015260408084015115159082015260c08101825163ffffffff16606083015260208301516001600160d81b031660808301526040830151151560a08301526106b6565b600080600080600060a08688031215610e7d57600080fd5b85359450610e8d60208701610b1d565b9350610e9b60408701610b9b565b9250610ea960608701610bb7565b9150610eb760808701610bb7565b90509295509295909350565b60008060408385031215610ed657600080fd5b82359150610ee660208401610b1d565b90509250929050565b600080600083850360a0811215610f0557600080fd5b6060811215610f1357600080fd5b506040516060810181811067ffffffffffffffff82111715610f3757610f37610b36565b604052610f4385610b1d565b815260208501356001600160d81b0381168114610f5f57600080fd5b602082015260408501358015158114610f7757600080fd5b60408201529250610f8a60608501610b1d565b9150610db160808501610b9b565b815163ffffffff1681526020808301516001600160d81b031690820152604080830151151590820152606081015b92915050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361102957611029610fe2565b5060010190565b63ffffffff82811682821603908082111561104d5761104d610fe2565b5092915050565b6001600160d81b0382811682821603908082111561104d5761104d610fe2565b8082028115828204841417610fc657610fc6610fe2565b634e487b7160e01b600052601260045260246000fd5b6000826110b0576110b061108b565b500490565b6001600160d81b0381811683821601908082111561104d5761104d610fe2565b61ffff82811682821603908082111561104d5761104d610fe2565b61ffff81811683821601908082111561104d5761104d610fe2565b600061ffff808416806111205761112061108b565b92169190910692915050565b80820180821115610fc657610fc6610fe2565b81810381811115610fc657610fc6610fe2565b6000826111615761116161108b565b500690565b6001600160d81b0382811682821681810283169291811582850482141761118f5761118f610fe2565b5050509291505056fea26469706673582212209c23c647c8322b30f99cc722894746b8d6a51e521ecdfe800871011a9ed0ce1e64736f6c63430008110033";

type OracleLibConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OracleLibConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OracleLib__factory extends ContractFactory {
  constructor(...args: OracleLibConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      OracleLib & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): OracleLib__factory {
    return super.connect(runner) as OracleLib__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OracleLibInterface {
    return new Interface(_abi) as OracleLibInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): OracleLib {
    return new Contract(address, _abi, runner) as unknown as OracleLib;
  }
}
