/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  EuphratesERC20,
  EuphratesERC20Interface,
} from "../../../../contracts/core/erc20/EuphratesERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimals_",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162000e4938038062000e4983398101604081905262000034916200013a565b60036200004284826200024e565b5060046200005183826200024e565b5060ff166080525050600280546001600160f81b0316600160f81b1790556200031a565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200009d57600080fd5b81516001600160401b0380821115620000ba57620000ba62000075565b604051601f8301601f19908116603f01168101908282118183101715620000e557620000e562000075565b816040528381526020925086838588010111156200010257600080fd5b600091505b8382101562000126578582018301518183018401529082019062000107565b600093810190920192909252949350505050565b6000806000606084860312156200015057600080fd5b83516001600160401b03808211156200016857600080fd5b62000176878388016200008b565b945060208601519150808211156200018d57600080fd5b506200019c868287016200008b565b925050604084015160ff81168114620001b457600080fd5b809150509250925092565b600181811c90821680620001d457607f821691505b602082108103620001f557634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200024957600081815260208120601f850160051c81016020861015620002245750805b601f850160051c820191505b81811015620002455782815560010162000230565b5050505b505050565b81516001600160401b038111156200026a576200026a62000075565b62000282816200027b8454620001bf565b84620001fb565b602080601f831160018114620002ba5760008415620002a15750858301515b600019600386901b1c1916600185901b17855562000245565b600085815260208120601f198616915b82811015620002eb57888601518255948401946001909101908401620002ca565b50858210156200030a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b608051610b136200033660003960006101340152610b136000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c8063313ce5671161007657806395d89b411161005b57806395d89b4114610191578063a9059cbb14610199578063dd62ed3e146101ac57600080fd5b8063313ce5671461012f57806370a082311461016857600080fd5b806306fdde03146100a8578063095ea7b3146100c657806318160ddd146100e957806323b872dd1461011c575b600080fd5b6100b06101e5565b6040516100bd919061090d565b60405180910390f35b6100d96100d4366004610995565b610277565b60405190151581526020016100bd565b6002547effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff165b6040519081526020016100bd565b6100d961012a3660046109bf565b610291565b6101567f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff90911681526020016100bd565b61010e6101763660046109fb565b6001600160a01b031660009081526020819052604090205490565b6100b0610390565b6100d96101a7366004610995565b61039f565b61010e6101ba366004610a1d565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101f490610a50565b80601f016020809104026020016040519081016040528092919081815260200182805461022090610a50565b801561026d5780601f106102425761010080835404028352916020019161026d565b820191906000526020600020905b81548152906001019060200180831161025057829003601f168201915b5050505050905090565b60003361028581858561048d565b60019150505b92915050565b600254600090600119600160f81b90910460ff16016102f75760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b600280547effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f02000000000000000000000000000000000000000000000000000000000000001790553361034c8582856105e5565b610357858585610695565b6001915050600280547effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff16600160f81b1790559392505050565b6060600480546101f490610a50565b600254600090600119600160f81b90910460ff16016104005760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016102ee565b600280547effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f020000000000000000000000000000000000000000000000000000000000000017905533610455818585610695565b6001915050600280547effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff16600160f81b17905592915050565b6001600160a01b0383166105085760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016102ee565b6001600160a01b0382166105845760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f737300000000000000000000000000000000000000000000000000000000000060648201526084016102ee565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461068f57818110156106825760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016102ee565b61068f848484840361048d565b50505050565b6001600160a01b0383166107115760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016102ee565b6001600160a01b03821661078d5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f657373000000000000000000000000000000000000000000000000000000000060648201526084016102ee565b816001600160a01b0316836001600160a01b0316036107ee5760405162461bcd60e51b815260206004820152601760248201527f45524332303a207472616e7366657220746f2073656c6600000000000000000060448201526064016102ee565b6001600160a01b0383166000908152602081905260409020548181101561087d5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e6365000000000000000000000000000000000000000000000000000060648201526084016102ee565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906108b4908490610aa3565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161090091815260200190565b60405180910390a361068f565b600060208083528351808285015260005b8181101561093a5785810183015185820160400152820161091e565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b80356001600160a01b038116811461099057600080fd5b919050565b600080604083850312156109a857600080fd5b6109b183610979565b946020939093013593505050565b6000806000606084860312156109d457600080fd5b6109dd84610979565b92506109eb60208501610979565b9150604084013590509250925092565b600060208284031215610a0d57600080fd5b610a1682610979565b9392505050565b60008060408385031215610a3057600080fd5b610a3983610979565b9150610a4760208401610979565b90509250929050565b600181811c90821680610a6457607f821691505b602082108103610a9d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b8082018082111561028b577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea26469706673582212206812a39196ff0edc713c65fcb4d06c676123c4cced5f865265d1a0b8ef77ae4964736f6c63430008110033";

type EuphratesERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EuphratesERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EuphratesERC20__factory extends ContractFactory {
  constructor(...args: EuphratesERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name_: string,
    symbol_: string,
    decimals_: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      name_,
      symbol_,
      decimals_,
      overrides || {}
    );
  }
  override deploy(
    name_: string,
    symbol_: string,
    decimals_: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(name_, symbol_, decimals_, overrides || {}) as Promise<
      EuphratesERC20 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EuphratesERC20__factory {
    return super.connect(runner) as EuphratesERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EuphratesERC20Interface {
    return new Interface(_abi) as EuphratesERC20Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): EuphratesERC20 {
    return new Contract(address, _abi, runner) as unknown as EuphratesERC20;
  }
}
