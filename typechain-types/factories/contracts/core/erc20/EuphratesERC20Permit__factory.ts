/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  EuphratesERC20Permit,
  EuphratesERC20PermitInterface,
} from "../../../../contracts/core/erc20/EuphratesERC20Permit";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimals_",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidShortString",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101806040523480156200001257600080fd5b5060405162001b0138038062001b018339810160408190526200003591620002d4565b6040805180820190915260018152603160f81b602082015283908184846003620000608482620003e8565b5060046200006f8382620003e8565b5060ff16608052505060028054600160f81b6001600160f81b03909116179055620000a882600562000168602090811b6200074a17901c565b61014052620000c581600662000168602090811b6200074a17901c565b61016052815160208084019190912061010052815190820120610120524660c052620001556101005161012051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60a05250503060e052506200050e915050565b600060208351101562000188576200018083620001b8565b9050620001b2565b826200019f836200020460201b6200077b1760201c565b90620001ac9082620003e8565b5060ff90505b92915050565b600080829050601f81511115620001ef578260405163305a27a960e01b8152600401620001e69190620004b4565b60405180910390fd5b8051620001fc82620004e9565b179392505050565b90565b634e487b7160e01b600052604160045260246000fd5b60005b838110156200023a57818101518382015260200162000220565b50506000910152565b600082601f8301126200025557600080fd5b81516001600160401b038082111562000272576200027262000207565b604051601f8301601f19908116603f011681019082821181831017156200029d576200029d62000207565b81604052838152866020858801011115620002b757600080fd5b620002ca8460208301602089016200021d565b9695505050505050565b600080600060608486031215620002ea57600080fd5b83516001600160401b03808211156200030257600080fd5b620003108783880162000243565b945060208601519150808211156200032757600080fd5b50620003368682870162000243565b925050604084015160ff811681146200034e57600080fd5b809150509250925092565b600181811c908216806200036e57607f821691505b6020821081036200038f57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620003e357600081815260208120601f850160051c81016020861015620003be5750805b601f850160051c820191505b81811015620003df57828155600101620003ca565b5050505b505050565b81516001600160401b0381111562000404576200040462000207565b6200041c8162000415845462000359565b8462000395565b602080601f8311600181146200045457600084156200043b5750858301515b600019600386901b1c1916600185901b178555620003df565b600085815260208120601f198616915b82811015620004855788860151825594840194600190910190840162000464565b5085821015620004a45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6020815260008251806020840152620004d58160408501602087016200021d565b601f01601f19169190910160400192915050565b805160208083015191908110156200038f5760001960209190910360031b1b16919050565b60805160a05160c05160e0516101005161012051610140516101605161158d62000574600039600061047d0152600061045201526000610cba01526000610c9201526000610bed01526000610c1701526000610c4101526000610170015261158d6000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c806370a082311161008c57806395d89b411161006657806395d89b4114610203578063a9059cbb1461020b578063d505accf1461021e578063dd62ed3e1461023357600080fd5b806370a08231146101ac5780637ecebe00146101d557806384b0196e146101e857600080fd5b806323b872dd116100bd57806323b872dd14610158578063313ce5671461016b5780633644e515146101a457600080fd5b806306fdde03146100e4578063095ea7b31461010257806318160ddd14610125575b600080fd5b6100ec61026c565b6040516100f99190611195565b60405180910390f35b6101156101103660046111cb565b6102fe565b60405190151581526020016100f9565b6002547effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff165b6040519081526020016100f9565b6101156101663660046111f5565b610318565b6101927f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff90911681526020016100f9565b61014a610417565b61014a6101ba366004611231565b6001600160a01b031660009081526020819052604090205490565b61014a6101e3366004611231565b610426565b6101f0610444565b6040516100f9979695949392919061124c565b6100ec6104e9565b6101156102193660046111cb565b6104f8565b61023161022c3660046112fe565b6105e6565b005b61014a610241366004611371565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60606003805461027b906113a4565b80601f01602080910402602001604051908101604052809291908181526020018280546102a7906113a4565b80156102f45780601f106102c9576101008083540402835291602001916102f4565b820191906000526020600020905b8154815290600101906020018083116102d757829003601f168201915b5050505050905090565b60003361030c81858561077e565b60019150505b92915050565b600254600090600119600160f81b90910460ff160161037e5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b600280547effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f0200000000000000000000000000000000000000000000000000000000000000179055336103d38582856108d6565b6103de858585610968565b6001915050600280547effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff16600160f81b1790559392505050565b6000610421610be0565b905090565b6001600160a01b038116600090815260076020526040812054610312565b6000606080828080836104787f00000000000000000000000000000000000000000000000000000000000000006005610d0b565b6104a37f00000000000000000000000000000000000000000000000000000000000000006006610d0b565b604080516000808252602082019092527f0f000000000000000000000000000000000000000000000000000000000000009b939a50919850469750309650945092509050565b60606004805461027b906113a4565b600254600090600119600160f81b90910460ff16016105595760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610375565b600280547effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f0200000000000000000000000000000000000000000000000000000000000000179055336105ae818585610968565b6001915050600280547effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff16600160f81b17905592915050565b834211156106365760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606401610375565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886106658c610daf565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e00160405160208183030381529060405280519060200120905060006106c082610dd7565b905060006106d082878787610e1f565b9050896001600160a01b0316816001600160a01b0316146107335760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152606401610375565b61073e8a8a8a61077e565b50505050505050505050565b60006020835110156107665761075f83610e47565b9050610312565b81610771848261143c565b5060ff9050610312565b90565b6001600160a01b0383166107f95760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610375565b6001600160a01b0382166108755760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610375565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811461096257818110156109555760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610375565b610962848484840361077e565b50505050565b6001600160a01b0383166109e45760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610375565b6001600160a01b038216610a605760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401610375565b816001600160a01b0316836001600160a01b031603610ac15760405162461bcd60e51b815260206004820152601760248201527f45524332303a207472616e7366657220746f2073656c660000000000000000006044820152606401610375565b6001600160a01b03831660009081526020819052604090205481811015610b505760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401610375565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610b879084906114fc565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610bd391815260200190565b60405180910390a3610962565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015610c3957507f000000000000000000000000000000000000000000000000000000000000000046145b15610c6357507f000000000000000000000000000000000000000000000000000000000000000090565b610421604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b606060ff8314610d1e5761075f83610ea3565b818054610d2a906113a4565b80601f0160208091040260200160405190810160405280929190818152602001828054610d56906113a4565b8015610da35780601f10610d7857610100808354040283529160200191610da3565b820191906000526020600020905b815481529060010190602001808311610d8657829003601f168201915b50505050509050610312565b6001600160a01b03811660009081526007602052604090208054600181018255905b50919050565b6000610312610de4610be0565b836040517f19010000000000000000000000000000000000000000000000000000000000008152600281019290925260228201526042902090565b6000806000610e3087878787610ee2565b91509150610e3d81610fa6565b5095945050505050565b600080829050601f81511115610e8b57826040517f305a27a90000000000000000000000000000000000000000000000000000000081526004016103759190611195565b8051610e968261151d565b179392505050565b505050565b60606000610eb08361110e565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115610f195750600090506003610f9d565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610f6d573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610f9657600060019250925050610f9d565b9150600090505b94509492505050565b6000816004811115610fba57610fba611541565b03610fc25750565b6001816004811115610fd657610fd6611541565b036110235760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610375565b600281600481111561103757611037611541565b036110845760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610375565b600381600481111561109857611098611541565b0361110b5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f75650000000000000000000000000000000000000000000000000000000000006064820152608401610375565b50565b600060ff8216601f811115610312576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000815180845260005b8181101561117557602081850181015186830182015201611159565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006111a8602083018461114f565b9392505050565b80356001600160a01b03811681146111c657600080fd5b919050565b600080604083850312156111de57600080fd5b6111e7836111af565b946020939093013593505050565b60008060006060848603121561120a57600080fd5b611213846111af565b9250611221602085016111af565b9150604084013590509250925092565b60006020828403121561124357600080fd5b6111a8826111af565b7fff00000000000000000000000000000000000000000000000000000000000000881681526000602060e08184015261128860e084018a61114f565b838103604085015261129a818a61114f565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825283870192509083019060005b818110156112ec578351835292840192918401916001016112d0565b50909c9b505050505050505050505050565b600080600080600080600060e0888a03121561131957600080fd5b611322886111af565b9650611330602089016111af565b95506040880135945060608801359350608088013560ff8116811461135457600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561138457600080fd5b61138d836111af565b915061139b602084016111af565b90509250929050565b600181811c908216806113b857607f821691505b602082108103610dd157634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b601f821115610e9e57600081815260208120601f850160051c810160208610156114155750805b601f850160051c820191505b8181101561143457828155600101611421565b505050505050565b815167ffffffffffffffff811115611456576114566113d8565b61146a8161146484546113a4565b846113ee565b602080601f83116001811461149f57600084156114875750858301515b600019600386901b1c1916600185901b178555611434565b600085815260208120601f198616915b828110156114ce578886015182559484019460019091019084016114af565b50858210156114ec5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b8082018082111561031257634e487b7160e01b600052601160045260246000fd5b80516020808301519190811015610dd15760001960209190910360031b1b16919050565b634e487b7160e01b600052602160045260246000fdfea26469706673582212206a7e7f0cfe61d736b62040266f6f8c643c37a214f5aa73209ba676a09022ab5764736f6c63430008110033";

type EuphratesERC20PermitConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EuphratesERC20PermitConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EuphratesERC20Permit__factory extends ContractFactory {
  constructor(...args: EuphratesERC20PermitConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name_: string,
    symbol_: string,
    decimals_: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      name_,
      symbol_,
      decimals_,
      overrides || {}
    );
  }
  override deploy(
    name_: string,
    symbol_: string,
    decimals_: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(name_, symbol_, decimals_, overrides || {}) as Promise<
      EuphratesERC20Permit & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): EuphratesERC20Permit__factory {
    return super.connect(runner) as EuphratesERC20Permit__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EuphratesERC20PermitInterface {
    return new Interface(_abi) as EuphratesERC20PermitInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): EuphratesERC20Permit {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as EuphratesERC20Permit;
  }
}
