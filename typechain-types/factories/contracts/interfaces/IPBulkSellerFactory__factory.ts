/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IPBulkSellerFactory,
  IPBulkSellerFactoryInterface,
} from "../../../contracts/interfaces/IPBulkSellerFactory";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sy",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "bulk",
        type: "address",
      },
    ],
    name: "BulkSellerCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "UpgradedBeacon",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "SY",
        type: "address",
      },
    ],
    name: "get",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "isMaintainer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IPBulkSellerFactory__factory {
  static readonly abi = _abi;
  static createInterface(): IPBulkSellerFactoryInterface {
    return new Interface(_abi) as IPBulkSellerFactoryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IPBulkSellerFactory {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IPBulkSellerFactory;
  }
}
