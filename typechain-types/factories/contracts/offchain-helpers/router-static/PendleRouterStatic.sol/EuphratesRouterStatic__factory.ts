/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  EuphratesRouterStatic,
  EuphratesRouterStaticInterface,
} from "../../../../../contracts/offchain-helpers/router-static/PendleRouterStatic.sol/EuphratesRouterStatic";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "actionStorage",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516101fe3803806101fe83398101604081905261002f91610090565b60008054336001600160a01b03199182161782556323b7d3cd60e21b90915260026020527fbc02cc0ac50b26a9ecfbd19a445fa7f71dbc9c12c0d1e45ba9bd4990843c174e80549091166001600160a01b03929092169190911790556100c0565b6000602082840312156100a257600080fd5b81516001600160a01b03811681146100b957600080fd5b9392505050565b61012f806100cf6000396000f3fe608060405236601057600e6013565b005b600e5b601f601b6021565b60d6565b565b600080357fffffffff000000000000000000000000000000000000000000000000000000001681526002602052604090205473ffffffffffffffffffffffffffffffffffffffff168060d3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f73656c6563746f72206e6f7420666f756e640000000000000000000000000000604482015260640160405180910390fd5b90565b3660008037600080366000845af43d6000803e80801560f4573d6000f35b3d6000fdfea26469706673582212207644a88bdef8e34dc05357299f9e39b5e541c6aa04ace05ba2d10b41a27dc3d664736f6c63430008110033";

type EuphratesRouterStaticConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EuphratesRouterStaticConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EuphratesRouterStatic__factory extends ContractFactory {
  constructor(...args: EuphratesRouterStaticConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    actionStorage: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(actionStorage, overrides || {});
  }
  override deploy(
    actionStorage: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(actionStorage, overrides || {}) as Promise<
      EuphratesRouterStatic & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): EuphratesRouterStatic__factory {
    return super.connect(runner) as EuphratesRouterStatic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EuphratesRouterStaticInterface {
    return new Interface(_abi) as EuphratesRouterStaticInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): EuphratesRouterStatic {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as EuphratesRouterStatic;
  }
}
