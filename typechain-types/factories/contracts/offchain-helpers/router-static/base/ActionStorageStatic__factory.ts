/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  ActionStorageStatic,
  ActionStorageStaticInterface,
} from "../../../../../contracts/offchain-helpers/router-static/base/ActionStorageStatic";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "claimOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
    ],
    name: "facetAddress",
    outputs: [
      {
        internalType: "address",
        name: "res",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBulkSellerFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDefaultApproxParams",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "guessMin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "guessMax",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "guessOffchain",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxIteration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "eps",
            type: "uint256",
          },
        ],
        internalType: "struct ApproxParams",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwnerAndPendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_pendingOwner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_bulkSellerFactory",
        type: "address",
      },
    ],
    name: "setBulkSellerFactory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "guessMin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "guessMax",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "guessOffchain",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxIteration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "eps",
            type: "uint256",
          },
        ],
        internalType: "struct ApproxParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "setDefaultApproxParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facet",
            type: "address",
          },
          {
            internalType: "bytes4[]",
            name: "selectors",
            type: "bytes4[]",
          },
        ],
        internalType: "struct IPMiniDiamond.SelectorsToFacet[]",
        name: "arr",
        type: "tuple[]",
      },
    ],
    name: "setFacetForSelectors",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
      {
        internalType: "bool",
        name: "direct",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "renounce",
        type: "bool",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610ae7806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c806359e85be611610076578063aac7e1751161005b578063aac7e17514610151578063cdffacc614610176578063ddf46a261461018957600080fd5b806359e85be61461012b5780638edf4f341461013e57600080fd5b8063051cee29146100a8578063078dfbe7146100bd5780630a33de0d146100d05780634e71e0c814610123575b600080fd5b6100bb6100b63660046107c0565b6101af565b005b6100bb6100cb366004610857565b610234565b6100d8610394565b60405161011a9190600060a082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015292915050565b60405180910390f35b6100bb6103fb565b6100bb61013936600461089a565b6104c5565b6100bb61014c3660046108bc565b61054e565b6008546001600160a01b03165b6040516001600160a01b03909116815260200161011a565b61015e610184366004610961565b61068c565b600054600154604080516001600160a01b0393841681529290911660208301520161011a565b6000546001600160a01b0316331461020e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b805160035560208101516004556040810151600555606081015160065560800151600755565b6000546001600160a01b0316331461028e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610205565b8115610366576001600160a01b0383161515806102a85750805b6102f45760405162461bcd60e51b815260206004820152601560248201527f4f776e61626c653a207a65726f206164647265737300000000000000000000006044820152606401610205565b600080546040516001600160a01b03808716939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b03851673ffffffffffffffffffffffffffffffffffffffff1991821617909155600180549091169055505050565b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0385161790555b505050565b6103c66040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b506040805160a08101825260035481526004546020820152600554918101919091526006546060820152600754608082015290565b6001546001600160a01b03163381146104565760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c657220213d2070656e64696e67206f776e65726044820152606401610205565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0390921673ffffffffffffffffffffffffffffffffffffffff19928316179055600180549091169055565b6000546001600160a01b0316331461051f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610205565b6008805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6000546001600160a01b031633146105a85760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610205565b60005b8181101561038f5760008383838181106105c7576105c761097c565b90506020028101906105d991906109ab565b6105e2906109e9565b905060005b81602001515181101561068257816000015160026000846020015184815181106106135761061361097c565b6020908102919091018101517fffffffff00000000000000000000000000000000000000000000000000000000168252810191909152604001600020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03929092169190911790556001016105e7565b50506001016105ab565b7fffffffff0000000000000000000000000000000000000000000000000000000081166000908152600260205260409020546001600160a01b0316806107145760405162461bcd60e51b815260206004820152601260248201527f73656c6563746f72206e6f7420666f756e6400000000000000000000000000006044820152606401610205565b919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561076b5761076b610719565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156107b8576107b8610719565b604052919050565b600060a082840312156107d257600080fd5b60405160a0810181811067ffffffffffffffff821117156107f5576107f5610719565b806040525082358152602083013560208201526040830135604082015260608301356060820152608083013560808201528091505092915050565b80356001600160a01b038116811461071457600080fd5b8035801515811461071457600080fd5b60008060006060848603121561086c57600080fd5b61087584610830565b925061088360208501610847565b915061089160408501610847565b90509250925092565b6000602082840312156108ac57600080fd5b6108b582610830565b9392505050565b600080602083850312156108cf57600080fd5b823567ffffffffffffffff808211156108e757600080fd5b818501915085601f8301126108fb57600080fd5b81358181111561090a57600080fd5b8660208260051b850101111561091f57600080fd5b60209290920196919550909350505050565b80357fffffffff000000000000000000000000000000000000000000000000000000008116811461071457600080fd5b60006020828403121561097357600080fd5b6108b582610931565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc18336030181126109df57600080fd5b9190910192915050565b6000604082360312156109fb57600080fd5b610a03610748565b610a0c83610830565b815260208084013567ffffffffffffffff80821115610a2a57600080fd5b9085019036601f830112610a3d57600080fd5b813581811115610a4f57610a4f610719565b8060051b9150610a60848301610771565b8181529183018401918481019036841115610a7a57600080fd5b938501935b83851015610a9f57610a9085610931565b82529385019390850190610a7f565b9486019490945250929594505050505056fea26469706673582212201834e631a32f826b33694a5391239669d09cd7e03a7e213ec804343575c11f5264736f6c63430008110033";

type ActionStorageStaticConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ActionStorageStaticConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ActionStorageStatic__factory extends ContractFactory {
  constructor(...args: ActionStorageStaticConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ActionStorageStatic & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): ActionStorageStatic__factory {
    return super.connect(runner) as ActionStorageStatic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ActionStorageStaticInterface {
    return new Interface(_abi) as ActionStorageStaticInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ActionStorageStatic {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as ActionStorageStatic;
  }
}
