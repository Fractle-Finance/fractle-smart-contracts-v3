/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ActionSwapPT,
  ActionSwapPTInterface,
} from "../../../contracts/router/ActionSwapPT";

const _abi = [
  {
    inputs: [],
    name: "ApproxFail",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "guessMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "guessMax",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "eps",
        type: "uint256",
      },
    ],
    name: "ApproxParamsInvalid",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "exchangeRate",
        type: "int256",
      },
    ],
    name: "MarketExchangeRateBelowOne",
    type: "error",
  },
  {
    inputs: [],
    name: "MarketExpired",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "currentAmount",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "requiredAmount",
        type: "int256",
      },
    ],
    name: "MarketInsufficientPtForTrade",
    type: "error",
  },
  {
    inputs: [],
    name: "MarketProportionMustNotEqualOne",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "proportion",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "maxProportion",
        type: "int256",
      },
    ],
    name: "MarketProportionTooHigh",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "rateScalar",
        type: "int256",
      },
    ],
    name: "MarketRateScalarBelowZero",
    type: "error",
  },
  {
    inputs: [],
    name: "MarketZeroLnImpliedRate",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "totalPt",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "totalAsset",
        type: "int256",
      },
    ],
    name: "MarketZeroTotalPtOrTotalAsset",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "actualPtIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "limitPtIn",
        type: "uint256",
      },
    ],
    name: "RouterExceededLimitPtIn",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "actualSyIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "limitSyIn",
        type: "uint256",
      },
    ],
    name: "RouterExceededLimitSyIn",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "actualPtOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "requiredPtOut",
        type: "uint256",
      },
    ],
    name: "RouterInsufficientPtOut",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "actualSyOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "requiredSyOut",
        type: "uint256",
      },
    ],
    name: "RouterInsufficientSyOut",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "actualTokenOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "requiredTokenOut",
        type: "uint256",
      },
    ],
    name: "RouterInsufficientTokenOut",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "netPtToAccount",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "netSyToAccount",
        type: "int256",
      },
    ],
    name: "SwapPtAndSy",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "netPtToAccount",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "netTokenToAccount",
        type: "int256",
      },
    ],
    name: "SwapPtAndToken",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "exactPtIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minSyOut",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "guessMin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "guessMax",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "guessOffchain",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxIteration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "eps",
            type: "uint256",
          },
        ],
        internalType: "struct ApproxParams",
        name: "guessNewImpliedRate",
        type: "tuple",
      },
    ],
    name: "swapExactPtForSy",
    outputs: [
      {
        internalType: "uint256",
        name: "netSyOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "netSyFee",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "exactPtIn",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minTokenOut",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "tokenRedeemSy",
            type: "address",
          },
          {
            internalType: "address",
            name: "bulk",
            type: "address",
          },
          {
            internalType: "address",
            name: "euphratesSwap",
            type: "address",
          },
          {
            components: [
              {
                internalType: "enum SwapType",
                name: "swapType",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "extRouter",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "extCalldata",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "needScale",
                type: "bool",
              },
            ],
            internalType: "struct SwapData",
            name: "swapData",
            type: "tuple",
          },
        ],
        internalType: "struct TokenOutput",
        name: "output",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "guessMin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "guessMax",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "guessOffchain",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxIteration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "eps",
            type: "uint256",
          },
        ],
        internalType: "struct ApproxParams",
        name: "guessNewImpliedRate",
        type: "tuple",
      },
    ],
    name: "swapExactPtForToken",
    outputs: [
      {
        internalType: "uint256",
        name: "netTokenOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "netSyFee",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "exactSyIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minPtOut",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "guessMin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "guessMax",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "guessOffchain",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxIteration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "eps",
            type: "uint256",
          },
        ],
        internalType: "struct ApproxParams",
        name: "guessPtOut",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "guessMin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "guessMax",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "guessOffchain",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxIteration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "eps",
            type: "uint256",
          },
        ],
        internalType: "struct ApproxParams",
        name: "guessNewImpliedRate",
        type: "tuple",
      },
    ],
    name: "swapExactSyForPt",
    outputs: [
      {
        internalType: "uint256",
        name: "netPtOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "netSyFee",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "minPtOut",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "guessMin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "guessMax",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "guessOffchain",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxIteration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "eps",
            type: "uint256",
          },
        ],
        internalType: "struct ApproxParams",
        name: "guessPtOut",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "tokenIn",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "netTokenIn",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "tokenMintSy",
            type: "address",
          },
          {
            internalType: "address",
            name: "bulk",
            type: "address",
          },
          {
            internalType: "address",
            name: "euphratesSwap",
            type: "address",
          },
          {
            components: [
              {
                internalType: "enum SwapType",
                name: "swapType",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "extRouter",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "extCalldata",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "needScale",
                type: "bool",
              },
            ],
            internalType: "struct SwapData",
            name: "swapData",
            type: "tuple",
          },
        ],
        internalType: "struct TokenInput",
        name: "input",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "guessMin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "guessMax",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "guessOffchain",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxIteration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "eps",
            type: "uint256",
          },
        ],
        internalType: "struct ApproxParams",
        name: "guessNewImpliedRate",
        type: "tuple",
      },
    ],
    name: "swapExactTokenForPt",
    outputs: [
      {
        internalType: "uint256",
        name: "netPtOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "netSyFee",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "exactSyOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxPtIn",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "guessMin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "guessMax",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "guessOffchain",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxIteration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "eps",
            type: "uint256",
          },
        ],
        internalType: "struct ApproxParams",
        name: "guessPtIn",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "guessMin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "guessMax",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "guessOffchain",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxIteration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "eps",
            type: "uint256",
          },
        ],
        internalType: "struct ApproxParams",
        name: "guessNewImpliedRate",
        type: "tuple",
      },
    ],
    name: "swapPtForExactSy",
    outputs: [
      {
        internalType: "uint256",
        name: "netPtIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "netSyFee",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "exactPtOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxSyIn",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "guessMin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "guessMax",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "guessOffchain",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxIteration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "eps",
            type: "uint256",
          },
        ],
        internalType: "struct ApproxParams",
        name: "guessNewImpliedRate",
        type: "tuple",
      },
    ],
    name: "swapSyForExactPt",
    outputs: [
      {
        internalType: "uint256",
        name: "netSyIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "netSyFee",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506141c1806100206000396000f3fe6080604052600436106100655760003560e01c806397dfdcec1161004357806397dfdcec146100d6578063bcdac57d146100f6578063c3fa32841461011657600080fd5b8063279753f81461006a5780632b6a96f2146100965780633da97924146100b6575b600080fd5b61007d6100783660046139c1565b610136565b6040805192835260208301919091520160405180910390f35b3480156100a257600080fd5b5061007d6100b1366004613a52565b6102a5565b3480156100c257600080fd5b5061007d6100d1366004613ad1565b61046e565b3480156100e257600080fd5b5061007d6100f1366004613b22565b610632565b34801561010257600080fd5b5061007d610111366004613b22565b6107f6565b34801561012257600080fd5b5061007d610131366004613ad1565b610ad3565b600080600080886001600160a01b0316632c8ce6bc6040518163ffffffff1660e01b8152600401606060405180830381865afa15801561017a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061019e9190613b84565b925050915060006101b28a8460018a610df6565b905060008a6001600160a01b03166368bc9e6a6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102189190613bd1565b90506000836001600160a01b031663a9480e596040518163ffffffff1660e01b8152600401602060405180830381865afa15801561025a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027e9190613bd1565b90506102918d8d86868f8f8e8989610ff3565b909e909d509b505050505050505050505050565b600080600080876001600160a01b0316632c8ce6bc6040518163ffffffff1660e01b8152600401606060405180830381865afa1580156102e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030d9190613b84565b509150915061031e81338a8a61118b565b6000886001600160a01b03166329032bad610339858a6111ac565b604080516000815260208101918290527fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1690915261038591908c908b9060248101613c3a565b60408051808303816000875af11580156103a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c79190613c92565b945090506103d98a84838a60006111ec565b94506103e86020880188613cb6565b6001600160a01b0316896001600160a01b0316336001600160a01b03167f78e08a1e3c7a72f78d2c8ad8254052914bad73f8c681dbdc4267d0bb8ac9423c8d6104308d6113d1565b6104398b6113e8565b604080516001600160a01b03909416845260208401929092529082015260600160405180910390a45050509550959350505050565b6000806000866001600160a01b0316632c8ce6bc6040518163ffffffff1660e01b8152600401606060405180830381865afa1580156104b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d59190613b84565b509150506104e58133898961118b565b604080516000815260208101918290527f29032bad000000000000000000000000000000000000000000000000000000009091526001600160a01b038816906329032bad9061053d908b908a90899060248101613c3a565b60408051808303816000875af115801561055b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057f9190613c92565b9093509150848310156105cd576040517f0a4439e600000000000000000000000000000000000000000000000000000000815260048101849052602481018690526044015b60405180910390fd5b6001600160a01b03808916908816337f3f5e2944826baeaed8eb77f0f74e6088a154a0fc1317f062fd984585607b47396106068a6113d1565b61060f886113e8565b6040805192835260208301919091520160405180910390a4509550959350505050565b600080600080886001600160a01b0316632c8ce6bc6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610676573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069a9190613b84565b92505091506106ab82338b8b61118b565b6000896001600160a01b03166368bc9e6a6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070f9190613bd1565b90506000826001600160a01b031663a9480e596040518163ffffffff1660e01b8152600401602060405180830381865afa158015610751573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107759190613bd1565b90506107888c8c858d8d8d8d8989610ff3565b90965094506001600160a01b03808d16908c16337f3f5e2944826baeaed8eb77f0f74e6088a154a0fc1317f062fd984585607b47396107c68a6113e8565b6107cf8f6113d1565b6040805192835260208301919091520160405180910390a450505050965096945050505050565b60405163794052f360e01b8152306004820152600090819081906001600160a01b0389169063794052f39060240161014060405180830381865afa158015610842573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108669190613d16565b9050600080896001600160a01b0316632c8ce6bc6040518163ffffffff1660e01b8152600401606060405180830381865afa1580156108a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108cd9190613b84565b925092505060008a6001600160a01b03166368bc9e6a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610912573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109369190613bd1565b90506000826001600160a01b031663a9480e596040518163ffffffff1660e01b8152600401602060405180830381865afa158015610978573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099c9190613bd1565b90506109cf6109b3846001600160a01b031661141b565b8c836109c4368e90038e018e613da4565b899392919087611481565b509097505089871115610a18576040517f781c131a00000000000000000000000000000000000000000000000000000000815260048101889052602481018b90526044016105c4565b610a2484338e8a61118b565b60008c6001600160a01b03166329032bad8f8a8c6040516020016040516020818303038152906040526040518563ffffffff1660e01b8152600401610a6c9493929190613c3a565b60408051808303816000875af1158015610a8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aae9190613c92565b975090508b811015610ac257610ac2613e22565b505050505050965096945050505050565b60405163794052f360e01b8152306004820152600090819081906001600160a01b0388169063794052f39060240161014060405180830381865afa158015610b1f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b439190613d16565b9050600080886001600160a01b0316632c8ce6bc6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610b86573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610baa9190613b84565b92505091506000896001600160a01b03166368bc9e6a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c139190613bd1565b90506000826001600160a01b031663a9480e596040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c799190613bd1565b9050610c9b610c90846001600160a01b031661141b565b86908c8b8686611583565b509097505088871115610ce4576040517fe744f9c000000000000000000000000000000000000000000000000000000000815260048101889052602481018a90526044016105c4565b610cf084338d8a61118b565b604080516000815260208101918290527fe70a6126000000000000000000000000000000000000000000000000000000009091526001600160a01b038c169063e70a612690610d48908f908e908d9060248101613c3a565b60408051808303816000875af1158015610d66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d8a9190613c92565b9650506001600160a01b03808d16908c16337f3f5e2944826baeaed8eb77f0f74e6088a154a0fc1317f062fd984585607b4739610dc68e6113e8565b610dcf8c6113d1565b6040805192835260208301919091520160405180910390a450505050509550959350505050565b600080610e0660a0840184613e38565b610e14906020810190613e85565b9050600080826003811115610e2b57610e2b613ea0565b03610e5657610e4b610e406020860186613cb6565b3386602001356115e0565b506020830135610fdb565b6003826003811115610e6a57610e6a613ea0565b03610ea957610e7f610e406020860186613cb6565b610e4b610e8f6020860186613cb6565b610e9f6060870160408801613cb6565b86602001356116da565b6000610eb86020860186613cb6565b6001600160a01b031603610edb57610ed660003386602001356115e0565b610f06565b610f06610eeb6020860186613cb6565b33610efc60a0880160808901613cb6565b876020013561118b565b610f1660a0850160808601613cb6565b6001600160a01b0316632bdb823c6000610f336020880188613cb6565b6001600160a01b031614610f48576000610f4e565b85602001355b610f5b6020880188613cb6565b6020880135610f6d60a08a018a613e38565b6040518563ffffffff1660e01b8152600401610f8b93929190613efa565b6000604051808303818588803b158015610fa457600080fd5b505af1158015610fb8573d6000803e3d6000fd5b5050505050610fd8846040016020810190610fd39190613cb6565b6117b9565b90505b610fe88787838888611857565b979650505050505050565b60405163794052f360e01b8152306004820152600090819081906001600160a01b038c169063794052f39060240161014060405180830381865afa15801561103f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110639190613d16565b905061109661107a8b6001600160a01b031661141b565b8a8661108b368c90038c018c613da4565b85939291908a611a0a565b509250878310156110dd576040517f9cdffc8e00000000000000000000000000000000000000000000000000000000815260048101849052602481018990526044016105c4565b604080516000815260208101918290527fe70a6126000000000000000000000000000000000000000000000000000000009091526001600160a01b038c169063e70a612690611135908f9087908b9060248101613c3a565b60408051808303816000875af1158015611153573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111779190613c92565b939d939c50929a5050505050505050505050565b80156111a6576111a66001600160a01b038516848484611adf565b50505050565b6000806111bf6080840160608501613cb6565b6001600160a01b0316036111d357826111e3565b6111e36080830160608401613cb6565b90505b92915050565b6000806111fc60a0850185613e38565b61120a906020810190613e85565b9050600081600381111561122057611220613ea0565b03611239576112328787878787611b90565b915061137c565b600381600381111561124d5761124d613ea0565b036112a35761125f3087878787611b90565b91506112876112746060860160408701613cb6565b6112816020870187613cb6565b846116da565b61129e6112976020860186613cb6565b8884611d4d565b61137c565b60006112c16112b860a0870160808801613cb6565b88888888611b90565b90506112d360a0860160808701613cb6565b6001600160a01b0316632bdb823c6112f16060880160408901613cb6565b836112ff60a08a018a613e38565b6040518463ffffffff1660e01b815260040161131d93929190613efa565b600060405180830381600087803b15801561133757600080fd5b505af115801561134b573d6000803e3d6000fd5b506113619250610fd39150506020870187613cb6565b925061137a6113736020870187613cb6565b8985611d4d565b505b83602001358210156113c7576040517fc5b5576d00000000000000000000000000000000000000000000000000000000815260048101839052602085013560248201526044016105c4565b5095945050505050565b60006113dc826113e8565b6111e690600019613fff565b60007f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82111561141757600080fd5b5090565b6000816001600160a01b0316631d52edc46040518163ffffffff1660e01b81526004016020604051808303816000875af115801561145d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111e69190613bd1565b60008080806114928a8a878a611e1f565b905085604001516000036114c5576114b786602001516114b28c84611f60565b611fe4565b60208701526114c586611ffa565b60005b86606001518110156115445760006114e0888361206f565b90506000806114f18e868f866120f4565b50915091508b821061152c5761150c828d8c60800151612125565b156115205791965094509250611577915050565b60208a01839052611530565b828a525b5050508061153d9061402f565b90506114c8565b506040517ffa711db200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b96509650969350505050565b6000806000806000806115a28c8c61159a8d6113e8565b8c8c8c612159565b9250925092506115b96115b48461222b565b612239565b95506115c482612239565b94506115cf81612239565b935050505096509650969350505050565b6001600160a01b0383166116425780341461163d5760405162461bcd60e51b815260206004820152600c60248201527f657468206d69736d61746368000000000000000000000000000000000000000060448201526064016105c4565b505050565b801561163d576040517f23b872dd0000000000000000000000000000000000000000000000000000000081526001600160a01b038381166004830152306024830152604482018390528416906323b872dd906064016020604051808303816000875af11580156116b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111a69190614049565b6001600160a01b03831661174157816001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b15801561172357600080fd5b505af1158015611737573d6000803e3d6000fd5b5050505050505050565b6040517f2e1a7d4d000000000000000000000000000000000000000000000000000000008152600481018290526001600160a01b03841690632e1a7d4d90602401600060405180830381600087803b15801561179c57600080fd5b505af11580156117b0573d6000803e3d6000fd5b50505050505050565b60006001600160a01b03821615611850576040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b038316906370a0823190602401602060405180830381865afa158015611827573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061184b9190613bd1565b6111e6565b4792915050565b6000808061186b6060850160408601613cb6565b6001600160a01b031614611880576000611882565b845b905060006118966080850160608601613cb6565b6001600160a01b031614611952576118b46080840160608501613cb6565b6040517fb27670700000000000000000000000000000000000000000000000000000000081526001600160a01b0389811660048301526024820188905260448201879052919091169063b276707090839060640160206040518083038185885af1158015611926573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061194b9190613bd1565b91506113c7565b6001600160a01b0386166320e8c56582896119736060880160408901613cb6565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b1681526001600160a01b03928316600482015291166024820152604481018990526064810188905260840160206040518083038185885af11580156119e5573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610fe89190613bd1565b60008080611a1a89898689611e1f565b90508460400151600003611a4c57611a3e85602001516114b2838c60000151612248565b6020860152611a4c85611ffa565b60005b8560600151811015611544576000611a67878361206f565b9050600080611a788d868e866122dc565b50915091508a8211611aaf57611a93828c8b6080015161230e565b15611aa757919550909350611ad492505050565b828952611ac0565b611aba600184614066565b60208a01525b50505080611acd9061402f565b9050611a4f565b965096945050505050565b6040516001600160a01b03808516602483015283166044820152606481018290526111a69085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009093169290921790915261233c565b60008115611bad57611bad8533611ba788876111ac565b8761118b565b6000611bbf6080850160608601613cb6565b6001600160a01b031614611c8057611bdd6080840160608501613cb6565b6040517f83f5b7660000000000000000000000000000000000000000000000000000000081526001600160a01b03888116600483015260248201879052600060448301526001606483015291909116906383f5b766906084016020604051808303816000875af1158015611c55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c799190613bd1565b9050611d44565b6001600160a01b03851663769f8e5d8786611ca16060880160408901613cb6565b60405160e085901b7fffffffff000000000000000000000000000000000000000000000000000000001681526001600160a01b03938416600482015260248101929092529091166044820152600060648201526001608482015260a4016020604051808303816000875af1158015611d1d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d419190613bd1565b90505b95945050505050565b80600003611d5a57505050565b6001600160a01b038316611e0b576000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114611db5576040519150601f19603f3d011682016040523d82523d6000602084013e611dba565b606091505b50509050806111a65760405162461bcd60e51b815260206004820152600f60248201527f6574682073656e64206661696c6564000000000000000000000000000000000060448201526064016105c4565b61163d6001600160a01b0384168383612424565b611e4a6040518060800160405280600081526020016000815260200160008152602001600081525090565b60c08501518210611e87576040517fb2094b5900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000828660c00151611e999190614066565b9050611eb186611eac6201518084614079565b61246d565b82526020860151611ec39086906124e7565b602083015285511580611ed857506020820151155b15611f1f57855160208301516040517fb1c4aefb000000000000000000000000000000000000000000000000000000008152600481019290925260248201526044016105c4565b611f3e866000015187610120015184602001518560000151888661251e565b604083015260e0860151611f5290826125a1565b606083015250949350505050565b60008060009050600060018460200151611f7a9190614066565b90505b808214611fdc5760006002611f928385614090565b611f9d906001614090565b611fa791906140b9565b90506000611fba868860000151846125e3565b1215611fd257611fcb600182614066565b9150611fd6565b8092505b50611f7d565b509392505050565b6000818310611ff357816111e3565b5090919050565b6020810151815111806120185750670de0b6b3a76400008160800151115b1561206c578051602082015160808301516040517fb301af040000000000000000000000000000000000000000000000000000000081526004810193909352602483019190915260448201526064016105c4565b50565b6000811580156120825750604083015115155b15612092575060408201516111e6565b60208301518351116120c257602083015183516002916120b191614090565b6120bb91906140b9565b90506111e6565b6040517ffa711db200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808080808061211289896121098a6140cd565b8d9291906126ed565b919c909b50909950975050505050505050565b6000828410158015612151575061214d8361214884670de0b6b3a7640000614090565b612842565b8411155b949350505050565b600080600061216c8960c0015185101590565b156121a3576040517fb2094b5900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b885187126121ea5788516040517f8615426c0000000000000000000000000000000000000000000000000000000081526004810191909152602481018890526044016105c4565b60006121f88a8a8888611e1f565b90506122068a828b8b6126ed565b9195509350915061221e8a828b8b88878d8d8d612862565b5096509650969350505050565b60006111e682600019613fff565b60008082121561141757600080fd5b60008061227561227085600001518660400151876060015161226a91906140e9565b9061291f565b612942565b9050600061229561228e670de0b6b3a764000084614110565b8390612e59565b905060006122b38660200151866122ac9190614110565b839061291f565b905060006122c182876140e9565b90506103e86122d2826103e7614079565b610fe891906140b9565b600080808080806122ef8a8a8a8a6126ed565b925092509250826122ff906140cd565b9a919950975095505050505050565b600082841115801561215157506123318361214884670de0b6b3a7640000614066565b909310159392505050565b6000612391826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612e7f9092919063ffffffff16565b90508051600014806123b25750808060200190518101906123b29190614049565b61163d5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016105c4565b6040516001600160a01b03831660248201526044810182905261163d9084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401611b2c565b6000612478826113e8565b61248f61248a6201518061016d614079565b6113e8565b846080015161249e9190613fff565b6124a89190614138565b9050600081136111e6576040517f1ca41876000000000000000000000000000000000000000000000000000000008152600481018290526024016105c4565b600080600083126124f95760016124fd565b6000195b905061251461248a8561250f86612e8e565b612ea0565b6121519082613fff565b60008061252c878585612ebf565b9050670de0b6b3a764000081121561255a5760405163329e322960e21b8152600481018290526024016105c4565b6000612570612569888b614110565b8a90612e59565b9050600061257d82612f79565b90506125898188612e59565b61259390846140e9565b9a9950505050505050505050565b6000806125b36201518061016d614079565b620151806125c18587614079565b6125cb9190614079565b6125d591906140b9565b9050612151612270826113e8565b6000808285602001516125f691906140e9565b905060006126048585614110565b90506000821380156126165750600081135b6126625760405162461bcd60e51b815260206004820152601260248201527f696e76616c6964207074546f4d61726b6574000000000000000000000000000060448201526064016105c4565b60006126906126718484613fff565b60208901516126809089614110565b61268a9088613fff565b90612e59565b905060006126a66126a18486612e59565b612fec565b88519091506000906126c190670de0b6b3a764000090612e59565b90506126d18161226a84866140e9565b89604001516126e091906140e9565b9998505050505050505050565b6000806000806127108860000151886020015189600001518a604001518961308d565b905060006127266127218784612e59565b61222b565b606089015190915060008713156127955760006127438483612e59565b9050670de0b6b3a76400008112156127715760405163329e322960e21b8152600481018290526024016105c4565b61278d61278683670de0b6b3a76400006140e9565b849061291f565b9150506127c2565b6127bf816127ab81670de0b6b3a76400006140e9565b6127b59085613fff565b6127219190614138565b90505b600060646127d48c61010001516113e8565b6127de9084613fff565b6127e89190614138565b905060006127f683856140e9565b90506000811261280f5761280a8a8261315c565b612819565b6128198a82613189565b97506128258a8461315c565b96506128318a8361315c565b955050505050509450945094915050565b60008061284f8385614079565b670de0b6b3a76400009004949350505050565b6000818a60c001516128749190614066565b8a5190915061288390886131b6565b8a5261289d6128928688614110565b60208c0151906131b6565b60208b018190528a516128d2916128b5908b906124e7565b8b5160408d01516128cb368a90038a018a613da4565b8887613212565b6101208b01819052600003612913576040517faa69ae1e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505050505050505050565b60008061292c8385613fff565b9050670de0b6b3a7640000815b05949350505050565b60007ffffffffffffffffffffffffffffffffffffffffffffffffdc702bd3a30fc0000821215801561297d575068070c1cc73b00c800008213155b6129c95760405162461bcd60e51b815260206004820152601060248201527f496e76616c6964206578706f6e656e740000000000000000000000000000000060448201526064016105c4565b6000821215612a02576129de82600003612942565b6ec097ce7bc90715b34b9f1000000000816129fb576129fb6140a3565b0592915050565b60006806f05b59d3b20000008312612a5857507ffffffffffffffffffffffffffffffffffffffffffffffff90fa4a62c4e00000090910190770195e54c5dd42177f53a27172fa9ec630262827000000000612aa4565b6803782dace9d90000008312612aa057507ffffffffffffffffffffffffffffffffffffffffffffffffc87d2531627000000909101906b1425982cf597cd205cef7380612aa4565b5060015b6064929092029168056bc75e2d6310000068ad78ebc5ac620000008412612b0a577fffffffffffffffffffffffffffffffffffffffffffffff5287143a539e0000009093019268056bc75e2d631000006e01855144814a7ff805980ff008400082020590505b6856bc75e2d6310000008412612b5c577fffffffffffffffffffffffffffffffffffffffffffffffa9438a1d29cf0000009093019268056bc75e2d631000006b02df0ab5a80a22c61ab5a70082020590505b682b5e3af16b188000008412612bac577fffffffffffffffffffffffffffffffffffffffffffffffd4a1c50e94e78000009093019268056bc75e2d63100000693f1fce3da636ea5cf85082020590505b6815af1d78b58c4000008412612bfc577fffffffffffffffffffffffffffffffffffffffffffffffea50e2874a73c000009093019268056bc75e2d63100000690127fa27722cc06cc5e282020590505b680ad78ebc5ac62000008412612c4b577ffffffffffffffffffffffffffffffffffffffffffffffff5287143a539e000009093019268056bc75e2d6310000068280e60114edb805d0382020590505b68056bc75e2d631000008412612c9a577ffffffffffffffffffffffffffffffffffffffffffffffffa9438a1d29cf000009093019268056bc75e2d63100000680ebc5fb4174612111082020590505b6802b5e3af16b18800008412612ce9577ffffffffffffffffffffffffffffffffffffffffffffffffd4a1c50e94e7800009093019268056bc75e2d631000006808f00f760a4b2db55d82020590505b68015af1d78b58c400008412612d38577ffffffffffffffffffffffffffffffffffffffffffffffffea50e2874a73c00009093019268056bc75e2d631000006806f5f177578893793782020590505b68056bc75e2d631000008481019085906002908280020505918201919050600368056bc75e2d631000008783020505918201919050600468056bc75e2d631000008783020505918201919050600568056bc75e2d631000008783020505918201919050600668056bc75e2d631000008783020505918201919050600768056bc75e2d631000008783020505918201919050600868056bc75e2d631000008783020505918201919050600968056bc75e2d631000008783020505918201919050600a68056bc75e2d631000008783020505918201919050600b68056bc75e2d631000008783020505918201919050600c68056bc75e2d631000008783020505918201919050606468056bc75e2d63100000848402058502059695505050505050565b600080612e6e670de0b6b3a764000085613fff565b9050828181612939576129396140a3565b606061215184846000856132d9565b60008082136114175761184b826140cd565b6000670de0b6b3a7640000612eb58484614079565b6111e391906140b9565b60008080612ed261248a61016d876140b9565b90506000612ee261016d886140b9565b90506000612ef08287614079565b90506000612f00612270846113d1565b90506000612f10612270846113d1565b90506000612f3f8361226a612f2d82670de0b6b3a76400006140e9565b61268a86670de0b6b3a76400006140e9565b905081612f4c878361291f565b612f569190614110565b9650612f6a670de0b6b3a764000088612e59565b9b9a5050505050505050505050565b6000670de0b6b3a76400008203612fbc576040517fa9c8b14d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000612fda612fd384670de0b6b3a76400006140e9565b8490612e59565b9050612fe581612fec565b9392505050565b600080821361303d5760405162461bcd60e51b815260206004820152600d60248201527f6f7574206f6620626f756e64730000000000000000000000000000000000000060448201526064016105c4565b670c7d713b49da00008213801561305b5750670f43fc2c04ee000082125b1561307f57670de0b6b3a7640000613072836133c0565b816129fb576129fb6140a3565b6111e6826134f8565b919050565b60008061309a87846131b6565b905060006130ab61228e888a614110565b9050670d529ae9e8600000811315613100576040517ffc68d09e00000000000000000000000000000000000000000000000000000000815260048101829052670d529ae9e860000060248201526044016105c4565b600061310b82612f79565b9050856131188289612e59565b6131229190614110565b9350670de0b6b3a76400008412156131505760405163329e322960e21b8152600481018590526024016105c4565b50505095945050505050565b6000806000831261316e576001613172565b6000195b905061251461248a8561318486612e8e565b6138a3565b6000806000831261319b57600161319f565b6000195b905061251461248a856131b186612e8e565b6138b8565b6000818312156132085760405162461bcd60e51b815260206004820152600860248201527f6e6567617469766500000000000000000000000000000000000000000000000060448201526064016105c4565b6111e382846140e9565b60008061322389898989600061308d565b9050846040015160000361324457670de0b6b3a76400006020860152600085525b60005b856060015181101561154457600061325f878361206f565b9050600061326e828888612ebf565b905061327984612239565b61328282612239565b106132c2576132a661329382612239565b61329c86612239565b8a60800151612125565b156132b657509250610fe8915050565b602088018290526132c6565b8188525b5050806132d29061402f565b9050613247565b6060824710156133515760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016105c4565b600080866001600160a01b0316858760405161336d9190614166565b60006040518083038185875af1925050503d80600081146133aa576040519150601f19603f3d011682016040523d82523d6000602084013e6133af565b606091505b5091509150610fe8878383876138e4565b670de0b6b3a7640000026000806ec097ce7bc90715b34b9f1000000000808401907fffffffffffffffffffffffffffffffffff3f68318436f8ea4cb460f00000000085010281613412576134126140a3565b05905060006ec097ce7bc90715b34b9f100000000082800205905081806ec097ce7bc90715b34b9f100000000081840205915060038205016ec097ce7bc90715b34b9f100000000082840205915060058205016ec097ce7bc90715b34b9f100000000082840205915060078205016ec097ce7bc90715b34b9f100000000082840205915060098205016ec097ce7bc90715b34b9f1000000000828402059150600b8205016ec097ce7bc90715b34b9f1000000000828402059150600d8205016ec097ce7bc90715b34b9f1000000000828402059150600f82050160020295945050505050565b6000670de0b6b3a764000082121561353a57613531826ec097ce7bc90715b34b9f10000000008161352b5761352b6140a3565b056134f8565b60000392915050565b60007e1600ef3172e58d2e933ec884fde10064c63b5372d805e203c0000000000000831261358b57770195e54c5dd42177f53a27172fa9ec630262827000000000830592506806f05b59d3b2000000015b73011798004d755d3c8bc8e03204cf44619e00000083126135c3576b1425982cf597cd205cef7380830592506803782dace9d9000000015b606492830292026e01855144814a7ff805980ff0084000831261360b576e01855144814a7ff805980ff008400068056bc75e2d63100000840205925068ad78ebc5ac62000000015b6b02df0ab5a80a22c61ab5a7008312613646576b02df0ab5a80a22c61ab5a70068056bc75e2d6310000084020592506856bc75e2d631000000015b693f1fce3da636ea5cf850831261367d57693f1fce3da636ea5cf85068056bc75e2d631000008402059250682b5e3af16b18800000015b690127fa27722cc06cc5e283126136b457690127fa27722cc06cc5e268056bc75e2d6310000084020592506815af1d78b58c400000015b68280e60114edb805d0383126136e95768280e60114edb805d0368056bc75e2d631000008402059250680ad78ebc5ac6200000015b680ebc5fb41746121110831261371457680ebc5fb4174612111068056bc75e2d631000009384020592015b6808f00f760a4b2db55d8312613749576808f00f760a4b2db55d68056bc75e2d6310000084020592506802b5e3af16b1880000015b6806f5f1775788937937831261377e576806f5f177578893793768056bc75e2d63100000840205925068015af1d78b58c40000015b6806248f33704b28660383126137b2576806248f33704b28660368056bc75e2d63100000840205925067ad78ebc5ac620000015b6805c548670b9510e7ac83126137e6576805c548670b9510e7ac68056bc75e2d6310000084020592506756bc75e2d6310000015b600068056bc75e2d63100000840168056bc75e2d63100000808603028161380f5761380f6140a3565b059050600068056bc75e2d63100000828002059050818068056bc75e2d63100000818402059150600382050168056bc75e2d63100000828402059150600582050168056bc75e2d63100000828402059150600782050168056bc75e2d63100000828402059150600982050168056bc75e2d63100000828402059150600b820501600202606485820105979650505050505050565b600082612eb5670de0b6b3a764000084614079565b6000826001816138d0670de0b6b3a764000086614079565b6138da9190614090565b612eb59190614066565b6060831561395357825160000361394c576001600160a01b0385163b61394c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016105c4565b5081612151565b61215183838151156139685781518083602001fd5b8060405162461bcd60e51b81526004016105c49190614178565b6001600160a01b038116811461206c57600080fd5b600060a082840312156139a957600080fd5b50919050565b600060c082840312156139a957600080fd5b6000806000806000806101c087890312156139db57600080fd5b86356139e681613982565b955060208701356139f681613982565b945060408701359350613a0c8860608901613997565b925061010087013567ffffffffffffffff811115613a2957600080fd5b613a3589828a016139af565b925050613a46886101208901613997565b90509295509295509295565b60008060008060006101208688031215613a6b57600080fd5b8535613a7681613982565b94506020860135613a8681613982565b935060408601359250606086013567ffffffffffffffff811115613aa957600080fd5b613ab5888289016139af565b925050613ac58760808801613997565b90509295509295909350565b60008060008060006101208688031215613aea57600080fd5b8535613af581613982565b94506020860135613b0581613982565b93506040860135925060608601359150613ac58760808801613997565b6000806000806000806101c08789031215613b3c57600080fd5b8635613b4781613982565b95506020870135613b5781613982565b94506040870135935060608701359250613b748860808901613997565b9150613a46886101208901613997565b600080600060608486031215613b9957600080fd5b8351613ba481613982565b6020850151909350613bb581613982565b6040850151909250613bc681613982565b809150509250925092565b600060208284031215613be357600080fd5b5051919050565b60005b83811015613c05578181015183820152602001613bed565b50506000910152565b60008151808452613c26816020860160208601613bea565b601f01601f19169290920160200192915050565b60006101006001600160a01b0387168352856020840152843560408401526020850135606084015260408501356080840152606085013560a0840152608085013560c08401528060e0840152610fe881840185613c0e565b60008060408385031215613ca557600080fd5b505080516020909101519092909150565b600060208284031215613cc857600080fd5b8135612fe581613982565b604051610140810167ffffffffffffffff81118282101715613d0557634e487b7160e01b600052604160045260246000fd5b60405290565b805161308881613982565b60006101408284031215613d2957600080fd5b613d31613cd3565b825181526020830151602082015260408301516040820152613d5560608401613d0b565b60608201526080830151608082015260a083015160a082015260c083015160c082015260e083015160e08201526101008084015181830152506101208084015181830152508091505092915050565b600060a08284031215613db657600080fd5b60405160a0810181811067ffffffffffffffff82111715613de757634e487b7160e01b600052604160045260246000fd5b806040525082358152602083013560208201526040830135604082015260608301356060820152608083013560808201528091505092915050565b634e487b7160e01b600052600160045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81833603018112613e6c57600080fd5b9190910192915050565b80356004811061308857600080fd5b600060208284031215613e9757600080fd5b6111e382613e76565b634e487b7160e01b600052602160045260246000fd5b818352818160208501375060006020828401015260006020601f19601f840116840101905092915050565b801515811461206c57600080fd5b803561308881613ee1565b60006001600160a01b03808616835284602084015260606040840152613f1f84613e76565b60048110613f3d57634e487b7160e01b600052602160045260246000fd5b60608401526020840135613f5081613982565b1660808301526040830135368490037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1018112613f8c57600080fd5b830160208101903567ffffffffffffffff811115613fa957600080fd5b803603821315613fb857600080fd5b608060a0850152613fcd60e085018284613eb6565b915050613fdc60608501613eef565b80151560c08501526113c7565b634e487b7160e01b600052601160045260246000fd5b80820260008212600160ff1b8414161561401b5761401b613fe9565b81810583148215176111e6576111e6613fe9565b6000600019820361404257614042613fe9565b5060010190565b60006020828403121561405b57600080fd5b8151612fe581613ee1565b818103818111156111e6576111e6613fe9565b80820281158282048414176111e6576111e6613fe9565b808201808211156111e6576111e6613fe9565b634e487b7160e01b600052601260045260246000fd5b6000826140c8576140c86140a3565b500490565b6000600160ff1b82036140e2576140e2613fe9565b5060000390565b818103600083128015838313168383128216171561410957614109613fe9565b5092915050565b808201828112600083128015821682158216171561413057614130613fe9565b505092915050565b600082614147576141476140a3565b6000198314600160ff1b8314161561416157614161613fe9565b500590565b60008251613e6c818460208701613bea565b6020815260006111e36020830184613c0e56fea26469706673582212209d3376192684f6f212c286a58bce9c0b77baa09d9f0c48c82a9f6b4ae8b4e29664736f6c63430008110033";

type ActionSwapPTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ActionSwapPTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ActionSwapPT__factory extends ContractFactory {
  constructor(...args: ActionSwapPTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ActionSwapPT & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ActionSwapPT__factory {
    return super.connect(runner) as ActionSwapPT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ActionSwapPTInterface {
    return new Interface(_abi) as ActionSwapPTInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ActionSwapPT {
    return new Contract(address, _abi, runner) as unknown as ActionSwapPT;
  }
}
