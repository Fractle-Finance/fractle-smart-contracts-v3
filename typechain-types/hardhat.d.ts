/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  DeployContractOptions,
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomicfoundation/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "AutomationBase",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AutomationBase__factory>;
    getContractFactory(
      name: "AutomationCompatible",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AutomationCompatible__factory>;
    getContractFactory(
      name: "AggregatorInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AggregatorInterface__factory>;
    getContractFactory(
      name: "AggregatorV2V3Interface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AggregatorV2V3Interface__factory>;
    getContractFactory(
      name: "AggregatorV3Interface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AggregatorV3Interface__factory>;
    getContractFactory(
      name: "AutomationCompatibleInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AutomationCompatibleInterface__factory>;
    getContractFactory(
      name: "AccessControlUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControlUpgradeable__factory>;
    getContractFactory(
      name: "IAccessControlUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccessControlUpgradeable__factory>;
    getContractFactory(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Initializable__factory>;
    getContractFactory(
      name: "ReentrancyGuardUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReentrancyGuardUpgradeable__factory>;
    getContractFactory(
      name: "ContextUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ContextUpgradeable__factory>;
    getContractFactory(
      name: "ERC165Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165Upgradeable__factory>;
    getContractFactory(
      name: "IERC165Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165Upgradeable__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "IERC1822Proxiable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1822Proxiable__factory>;
    getContractFactory(
      name: "IERC1967",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1967__factory>;
    getContractFactory(
      name: "IERC5267",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC5267__factory>;
    getContractFactory(
      name: "BeaconProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BeaconProxy__factory>;
    getContractFactory(
      name: "IBeacon",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBeacon__factory>;
    getContractFactory(
      name: "ERC1967Upgrade",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1967Upgrade__factory>;
    getContractFactory(
      name: "Proxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Proxy__factory>;
    getContractFactory(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Initializable__factory>;
    getContractFactory(
      name: "UUPSUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UUPSUpgradeable__factory>;
    getContractFactory(
      name: "Pausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Pausable__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "ERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Permit__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Permit__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "EIP712",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EIP712__factory>;
    getContractFactory(
      name: "ShortStrings",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ShortStrings__factory>;
    getContractFactory(
      name: "BulkSeller",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BulkSeller__factory>;
    getContractFactory(
      name: "BulkSellerFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BulkSellerFactory__factory>;
    getContractFactory(
      name: "EuphratesERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EuphratesERC20__factory>;
    getContractFactory(
      name: "EuphratesERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EuphratesERC20Permit__factory>;
    getContractFactory(
      name: "BoringOwnableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BoringOwnableUpgradeable__factory>;
    getContractFactory(
      name: "BoringOwnableUpgradeableData",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BoringOwnableUpgradeableData__factory>;
    getContractFactory(
      name: "Errors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Errors__factory>;
    getContractFactory(
      name: "EuphratesExternalRewardDistributor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EuphratesExternalRewardDistributor__factory>;
    getContractFactory(
      name: "OracleLib",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OracleLib__factory>;
    getContractFactory(
      name: "EuphratesGaugeV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EuphratesGaugeV2__factory>;
    getContractFactory(
      name: "EuphratesMarketFactoryV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EuphratesMarketFactoryV2__factory>;
    getContractFactory(
      name: "EuphratesMarketV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EuphratesMarketV2__factory>;
    getContractFactory(
      name: "RewardManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RewardManager__factory>;
    getContractFactory(
      name: "RewardManagerAbstract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RewardManagerAbstract__factory>;
    getContractFactory(
      name: "EuphratesChainlinkReceiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EuphratesChainlinkReceiver__factory>;
    getContractFactory(
      name: "EuphratesChainlinkRelayer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EuphratesChainlinkRelayer__factory>;
    getContractFactory(
      name: "EuphratesEUSDSY",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EuphratesEUSDSY__factory>;
    getContractFactory(
      name: "SYBase",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SYBase__factory>;
    getContractFactory(
      name: "SYBaseWithRewards",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SYBaseWithRewards__factory>;
    getContractFactory(
      name: "EuphratesPrincipalToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EuphratesPrincipalToken__factory>;
    getContractFactory(
      name: "EuphratesYieldContractFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EuphratesYieldContractFactory__factory>;
    getContractFactory(
      name: "EuphratesYieldToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EuphratesYieldToken__factory>;
    getContractFactory(
      name: "InterestManagerYT",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.InterestManagerYT__factory>;
    getContractFactory(
      name: "EuphratesPrincipalTokenV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EuphratesPrincipalTokenV2__factory>;
    getContractFactory(
      name: "EuphratesYieldContractFactoryV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EuphratesYieldContractFactoryV2__factory>;
    getContractFactory(
      name: "EuphratesYieldTokenV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EuphratesYieldTokenV2__factory>;
    getContractFactory(
      name: "InterestManagerYTV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.InterestManagerYTV2__factory>;
    getContractFactory(
      name: "EuphratesPrincipalTokenV3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EuphratesPrincipalTokenV3__factory>;
    getContractFactory(
      name: "EuphratesYieldContractFactoryV3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EuphratesYieldContractFactoryV3__factory>;
    getContractFactory(
      name: "EuphratesYieldTokenV3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EuphratesYieldTokenV3__factory>;
    getContractFactory(
      name: "InterestManagerYTV3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.InterestManagerYTV3__factory>;
    getContractFactory(
      name: "IAddressProvider",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAddressProvider__factory>;
    getContractFactory(
      name: "IApeStaking",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IApeStaking__factory>;
    getContractFactory(
      name: "IBenQiComptroller",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBenQiComptroller__factory>;
    getContractFactory(
      name: "IBenQiInterestRateModel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBenQiInterestRateModel__factory>;
    getContractFactory(
      name: "Iconfigurator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Iconfigurator__factory>;
    getContractFactory(
      name: "IDiamondCut",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDiamondCut__factory>;
    getContractFactory(
      name: "IDiamondLoupe",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDiamondLoupe__factory>;
    getContractFactory(
      name: "IERC4626",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC4626__factory>;
    getContractFactory(
      name: "IEuphratesPreviewHelper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IEuphratesPreviewHelper__factory>;
    getContractFactory(
      name: "ILayerZeroEndpoint",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILayerZeroEndpoint__factory>;
    getContractFactory(
      name: "ILayerZeroReceiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILayerZeroReceiver__factory>;
    getContractFactory(
      name: "ILooksFeeSharing",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILooksFeeSharing__factory>;
    getContractFactory(
      name: "ILooksStaking",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILooksStaking__factory>;
    getContractFactory(
      name: "IPActionAddRemoveLiq",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPActionAddRemoveLiq__factory>;
    getContractFactory(
      name: "IPActionInfoStatic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPActionInfoStatic__factory>;
    getContractFactory(
      name: "IPActionMarketAuxStatic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPActionMarketAuxStatic__factory>;
    getContractFactory(
      name: "IPActionMarketCoreStatic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPActionMarketCoreStatic__factory>;
    getContractFactory(
      name: "IPActionMintRedeem",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPActionMintRedeem__factory>;
    getContractFactory(
      name: "IPActionMintRedeemStatic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPActionMintRedeemStatic__factory>;
    getContractFactory(
      name: "IPActionMisc",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPActionMisc__factory>;
    getContractFactory(
      name: "IPActionStorageStatic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPActionStorageStatic__factory>;
    getContractFactory(
      name: "IPActionSwapPT",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPActionSwapPT__factory>;
    getContractFactory(
      name: "IPActionSwapYT",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPActionSwapYT__factory>;
    getContractFactory(
      name: "IPActionVeEuphratesStatic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPActionVeEuphratesStatic__factory>;
    getContractFactory(
      name: "IPAllAction",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPAllAction__factory>;
    getContractFactory(
      name: "IPBulkSeller",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPBulkSeller__factory>;
    getContractFactory(
      name: "IPBulkSellerFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPBulkSellerFactory__factory>;
    getContractFactory(
      name: "IPBulkSellerCallback",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPBulkSellerCallback__factory>;
    getContractFactory(
      name: "IPExternalRewardDistributor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPExternalRewardDistributor__factory>;
    getContractFactory(
      name: "IPFeeDistributor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPFeeDistributor__factory>;
    getContractFactory(
      name: "IPFeeDistributorV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPFeeDistributorV2__factory>;
    getContractFactory(
      name: "IPGauge",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPGauge__factory>;
    getContractFactory(
      name: "IPInterestManagerYT",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPInterestManagerYT__factory>;
    getContractFactory(
      name: "IPInterestManagerYTV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPInterestManagerYTV2__factory>;
    getContractFactory(
      name: "IPInterestManagerYTV3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPInterestManagerYTV3__factory>;
    getContractFactory(
      name: "IPMarket",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPMarket__factory>;
    getContractFactory(
      name: "IPMarketFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPMarketFactory__factory>;
    getContractFactory(
      name: "IPMarketFactoryV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPMarketFactoryV2__factory>;
    getContractFactory(
      name: "IPMarketSwapCallback",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPMarketSwapCallback__factory>;
    getContractFactory(
      name: "IPMiniDiamond",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPMiniDiamond__factory>;
    getContractFactory(
      name: "IPMsgReceiverApp",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPMsgReceiverApp__factory>;
    getContractFactory(
      name: "IPMsgSendEndpoint",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPMsgSendEndpoint__factory>;
    getContractFactory(
      name: "IPOracleForSy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPOracleForSy__factory>;
    getContractFactory(
      name: "IPPrincipalToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPPrincipalToken__factory>;
    getContractFactory(
      name: "IPPtOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPPtOracle__factory>;
    getContractFactory(
      name: "IPRouterHelper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPRouterHelper__factory>;
    getContractFactory(
      name: "IPRouterStatic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPRouterStatic__factory>;
    getContractFactory(
      name: "IPYieldContractFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPYieldContractFactory__factory>;
    getContractFactory(
      name: "IPYieldToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPYieldToken__factory>;
    getContractFactory(
      name: "IPYieldTokenV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPYieldTokenV2__factory>;
    getContractFactory(
      name: "IPYieldTokenV3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPYieldTokenV3__factory>;
    getContractFactory(
      name: "IQiAvax",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IQiAvax__factory>;
    getContractFactory(
      name: "IQiErc20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IQiErc20__factory>;
    getContractFactory(
      name: "IQiToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IQiToken__factory>;
    getContractFactory(
      name: "IRewardManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRewardManager__factory>;
    getContractFactory(
      name: "IStandardizedYield",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStandardizedYield__factory>;
    getContractFactory(
      name: "IStargateLP",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStargateLP__factory>;
    getContractFactory(
      name: "IStargateRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStargateRouter__factory>;
    getContractFactory(
      name: "IStargateStaking",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStargateStaking__factory>;
    getContractFactory(
      name: "IStETH",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStETH__factory>;
    getContractFactory(
      name: "ISwETH",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISwETH__factory>;
    getContractFactory(
      name: "IWETH",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWETH__factory>;
    getContractFactory(
      name: "IWstETH",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWstETH__factory>;
    getContractFactory(
      name: "IEUSD",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IEUSD__factory>;
    getContractFactory(
      name: "EuphratesMsgReceiveEndpointUpg",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EuphratesMsgReceiveEndpointUpg__factory>;
    getContractFactory(
      name: "EuphratesMsgReceiverAppUpg",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EuphratesMsgReceiverAppUpg__factory>;
    getContractFactory(
      name: "EuphratesMsgSendEndpointUpg",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EuphratesMsgSendEndpointUpg__factory>;
    getContractFactory(
      name: "EuphratesMsgSenderAppUpg",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EuphratesMsgSenderAppUpg__factory>;
    getContractFactory(
      name: "EUSDMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EUSDMock__factory>;
    getContractFactory(
      name: "ITestERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITestERC20__factory>;
    getContractFactory(
      name: "TestERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestERC20__factory>;
    getContractFactory(
      name: "AddressProvider",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AddressProvider__factory>;
    getContractFactory(
      name: "AutomateReady",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AutomateReady__factory>;
    getContractFactory(
      name: "IAutomate",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAutomate__factory>;
    getContractFactory(
      name: "IOpsProxyFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOpsProxyFactory__factory>;
    getContractFactory(
      name: "ITaskTreasuryUpgradable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITaskTreasuryUpgradable__factory>;
    getContractFactory(
      name: "BaseSplitCodeFactoryContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseSplitCodeFactoryContract__factory>;
    getContractFactory(
      name: "Broadcaster",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Broadcaster__factory>;
    getContractFactory(
      name: "BulkSellerOffchain",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BulkSellerOffchain__factory>;
    getContractFactory(
      name: "ChainlinkRelayerAutomation",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChainlinkRelayerAutomation__factory>;
    getContractFactory(
      name: "ChainlinkRelayerGelato",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChainlinkRelayerGelato__factory>;
    getContractFactory(
      name: "EmptyUUPS",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EmptyUUPS__factory>;
    getContractFactory(
      name: "SDKErrorsDirectory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SDKErrorsDirectory__factory>;
    getContractFactory(
      name: "LegacyNFTHelper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LegacyNFTHelper__factory>;
    getContractFactory(
      name: "StarNFTV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StarNFTV1__factory>;
    getContractFactory(
      name: "Multicall2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Multicall2__factory>;
    getContractFactory(
      name: "EuphratesMulticallV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EuphratesMulticallV1__factory>;
    getContractFactory(
      name: "EuphratesMulticallV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EuphratesMulticallV2__factory>;
    getContractFactory(
      name: "PtAndLpToAsset",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PtAndLpToAsset__factory>;
    getContractFactory(
      name: "ActionInfoStatic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ActionInfoStatic__factory>;
    getContractFactory(
      name: "ActionMarketAuxStatic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ActionMarketAuxStatic__factory>;
    getContractFactory(
      name: "ActionMarketCoreStatic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ActionMarketCoreStatic__factory>;
    getContractFactory(
      name: "ActionMintRedeemStatic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ActionMintRedeemStatic__factory>;
    getContractFactory(
      name: "ActionStorageStatic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ActionStorageStatic__factory>;
    getContractFactory(
      name: "EuphratesRouterStatic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EuphratesRouterStatic__factory>;
    getContractFactory(
      name: "EuphratesPtOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EuphratesPtOracle__factory>;
    getContractFactory(
      name: "ActionAddRemoveLiq",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ActionAddRemoveLiq__factory>;
    getContractFactory(
      name: "ActionMintRedeem",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ActionMintRedeem__factory>;
    getContractFactory(
      name: "ActionMisc",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ActionMisc__factory>;
    getContractFactory(
      name: "ActionSwapPT",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ActionSwapPT__factory>;
    getContractFactory(
      name: "ActionSwapYT",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ActionSwapYT__factory>;
    getContractFactory(
      name: "ActionBaseCallback",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ActionBaseCallback__factory>;
    getContractFactory(
      name: "EuphratesRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EuphratesRouter__factory>;
    getContractFactory(
      name: "EuphratesRouterHelper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EuphratesRouterHelper__factory>;
    getContractFactory(
      name: "IPSwapAggregator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPSwapAggregator__factory>;
    getContractFactory(
      name: "IAggregationExecutor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAggregationExecutor__factory>;
    getContractFactory(
      name: "IExecutorHelper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IExecutorHelper__factory>;
    getContractFactory(
      name: "IMetaAggregationRouterV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMetaAggregationRouterV2__factory>;
    getContractFactory(
      name: "I1inchAggregationRouterV5",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.I1inchAggregationRouterV5__factory>;
    getContractFactory(
      name: "EuphratesSwap",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EuphratesSwap__factory>;

    getContractAt(
      name: "AutomationBase",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AutomationBase>;
    getContractAt(
      name: "AutomationCompatible",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AutomationCompatible>;
    getContractAt(
      name: "AggregatorInterface",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AggregatorInterface>;
    getContractAt(
      name: "AggregatorV2V3Interface",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AggregatorV2V3Interface>;
    getContractAt(
      name: "AggregatorV3Interface",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AggregatorV3Interface>;
    getContractAt(
      name: "AutomationCompatibleInterface",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AutomationCompatibleInterface>;
    getContractAt(
      name: "AccessControlUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControlUpgradeable>;
    getContractAt(
      name: "IAccessControlUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccessControlUpgradeable>;
    getContractAt(
      name: "Initializable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Initializable>;
    getContractAt(
      name: "ReentrancyGuardUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ReentrancyGuardUpgradeable>;
    getContractAt(
      name: "ContextUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ContextUpgradeable>;
    getContractAt(
      name: "ERC165Upgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165Upgradeable>;
    getContractAt(
      name: "IERC165Upgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165Upgradeable>;
    getContractAt(
      name: "Ownable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "IERC1822Proxiable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1822Proxiable>;
    getContractAt(
      name: "IERC1967",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1967>;
    getContractAt(
      name: "IERC5267",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC5267>;
    getContractAt(
      name: "BeaconProxy",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.BeaconProxy>;
    getContractAt(
      name: "IBeacon",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IBeacon>;
    getContractAt(
      name: "ERC1967Upgrade",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1967Upgrade>;
    getContractAt(
      name: "Proxy",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Proxy>;
    getContractAt(
      name: "Initializable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Initializable>;
    getContractAt(
      name: "UUPSUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.UUPSUpgradeable>;
    getContractAt(
      name: "Pausable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Pausable>;
    getContractAt(
      name: "ERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "ERC20Permit",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Permit>;
    getContractAt(
      name: "IERC20Metadata",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC20Permit",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Permit>;
    getContractAt(
      name: "IERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "EIP712",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EIP712>;
    getContractAt(
      name: "ShortStrings",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ShortStrings>;
    getContractAt(
      name: "BulkSeller",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.BulkSeller>;
    getContractAt(
      name: "BulkSellerFactory",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.BulkSellerFactory>;
    getContractAt(
      name: "EuphratesERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EuphratesERC20>;
    getContractAt(
      name: "EuphratesERC20Permit",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EuphratesERC20Permit>;
    getContractAt(
      name: "BoringOwnableUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.BoringOwnableUpgradeable>;
    getContractAt(
      name: "BoringOwnableUpgradeableData",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.BoringOwnableUpgradeableData>;
    getContractAt(
      name: "Errors",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Errors>;
    getContractAt(
      name: "EuphratesExternalRewardDistributor",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EuphratesExternalRewardDistributor>;
    getContractAt(
      name: "OracleLib",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.OracleLib>;
    getContractAt(
      name: "EuphratesGaugeV2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EuphratesGaugeV2>;
    getContractAt(
      name: "EuphratesMarketFactoryV2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EuphratesMarketFactoryV2>;
    getContractAt(
      name: "EuphratesMarketV2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EuphratesMarketV2>;
    getContractAt(
      name: "RewardManager",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.RewardManager>;
    getContractAt(
      name: "RewardManagerAbstract",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.RewardManagerAbstract>;
    getContractAt(
      name: "EuphratesChainlinkReceiver",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EuphratesChainlinkReceiver>;
    getContractAt(
      name: "EuphratesChainlinkRelayer",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EuphratesChainlinkRelayer>;
    getContractAt(
      name: "EuphratesEUSDSY",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EuphratesEUSDSY>;
    getContractAt(
      name: "SYBase",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SYBase>;
    getContractAt(
      name: "SYBaseWithRewards",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SYBaseWithRewards>;
    getContractAt(
      name: "EuphratesPrincipalToken",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EuphratesPrincipalToken>;
    getContractAt(
      name: "EuphratesYieldContractFactory",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EuphratesYieldContractFactory>;
    getContractAt(
      name: "EuphratesYieldToken",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EuphratesYieldToken>;
    getContractAt(
      name: "InterestManagerYT",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.InterestManagerYT>;
    getContractAt(
      name: "EuphratesPrincipalTokenV2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EuphratesPrincipalTokenV2>;
    getContractAt(
      name: "EuphratesYieldContractFactoryV2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EuphratesYieldContractFactoryV2>;
    getContractAt(
      name: "EuphratesYieldTokenV2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EuphratesYieldTokenV2>;
    getContractAt(
      name: "InterestManagerYTV2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.InterestManagerYTV2>;
    getContractAt(
      name: "EuphratesPrincipalTokenV3",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EuphratesPrincipalTokenV3>;
    getContractAt(
      name: "EuphratesYieldContractFactoryV3",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EuphratesYieldContractFactoryV3>;
    getContractAt(
      name: "EuphratesYieldTokenV3",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EuphratesYieldTokenV3>;
    getContractAt(
      name: "InterestManagerYTV3",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.InterestManagerYTV3>;
    getContractAt(
      name: "IAddressProvider",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IAddressProvider>;
    getContractAt(
      name: "IApeStaking",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IApeStaking>;
    getContractAt(
      name: "IBenQiComptroller",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IBenQiComptroller>;
    getContractAt(
      name: "IBenQiInterestRateModel",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IBenQiInterestRateModel>;
    getContractAt(
      name: "Iconfigurator",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Iconfigurator>;
    getContractAt(
      name: "IDiamondCut",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IDiamondCut>;
    getContractAt(
      name: "IDiamondLoupe",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IDiamondLoupe>;
    getContractAt(
      name: "IERC4626",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC4626>;
    getContractAt(
      name: "IEuphratesPreviewHelper",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IEuphratesPreviewHelper>;
    getContractAt(
      name: "ILayerZeroEndpoint",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ILayerZeroEndpoint>;
    getContractAt(
      name: "ILayerZeroReceiver",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ILayerZeroReceiver>;
    getContractAt(
      name: "ILooksFeeSharing",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ILooksFeeSharing>;
    getContractAt(
      name: "ILooksStaking",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ILooksStaking>;
    getContractAt(
      name: "IPActionAddRemoveLiq",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IPActionAddRemoveLiq>;
    getContractAt(
      name: "IPActionInfoStatic",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IPActionInfoStatic>;
    getContractAt(
      name: "IPActionMarketAuxStatic",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IPActionMarketAuxStatic>;
    getContractAt(
      name: "IPActionMarketCoreStatic",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IPActionMarketCoreStatic>;
    getContractAt(
      name: "IPActionMintRedeem",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IPActionMintRedeem>;
    getContractAt(
      name: "IPActionMintRedeemStatic",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IPActionMintRedeemStatic>;
    getContractAt(
      name: "IPActionMisc",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IPActionMisc>;
    getContractAt(
      name: "IPActionStorageStatic",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IPActionStorageStatic>;
    getContractAt(
      name: "IPActionSwapPT",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IPActionSwapPT>;
    getContractAt(
      name: "IPActionSwapYT",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IPActionSwapYT>;
    getContractAt(
      name: "IPActionVeEuphratesStatic",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IPActionVeEuphratesStatic>;
    getContractAt(
      name: "IPAllAction",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IPAllAction>;
    getContractAt(
      name: "IPBulkSeller",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IPBulkSeller>;
    getContractAt(
      name: "IPBulkSellerFactory",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IPBulkSellerFactory>;
    getContractAt(
      name: "IPBulkSellerCallback",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IPBulkSellerCallback>;
    getContractAt(
      name: "IPExternalRewardDistributor",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IPExternalRewardDistributor>;
    getContractAt(
      name: "IPFeeDistributor",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IPFeeDistributor>;
    getContractAt(
      name: "IPFeeDistributorV2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IPFeeDistributorV2>;
    getContractAt(
      name: "IPGauge",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IPGauge>;
    getContractAt(
      name: "IPInterestManagerYT",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IPInterestManagerYT>;
    getContractAt(
      name: "IPInterestManagerYTV2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IPInterestManagerYTV2>;
    getContractAt(
      name: "IPInterestManagerYTV3",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IPInterestManagerYTV3>;
    getContractAt(
      name: "IPMarket",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IPMarket>;
    getContractAt(
      name: "IPMarketFactory",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IPMarketFactory>;
    getContractAt(
      name: "IPMarketFactoryV2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IPMarketFactoryV2>;
    getContractAt(
      name: "IPMarketSwapCallback",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IPMarketSwapCallback>;
    getContractAt(
      name: "IPMiniDiamond",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IPMiniDiamond>;
    getContractAt(
      name: "IPMsgReceiverApp",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IPMsgReceiverApp>;
    getContractAt(
      name: "IPMsgSendEndpoint",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IPMsgSendEndpoint>;
    getContractAt(
      name: "IPOracleForSy",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IPOracleForSy>;
    getContractAt(
      name: "IPPrincipalToken",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IPPrincipalToken>;
    getContractAt(
      name: "IPPtOracle",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IPPtOracle>;
    getContractAt(
      name: "IPRouterHelper",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IPRouterHelper>;
    getContractAt(
      name: "IPRouterStatic",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IPRouterStatic>;
    getContractAt(
      name: "IPYieldContractFactory",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IPYieldContractFactory>;
    getContractAt(
      name: "IPYieldToken",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IPYieldToken>;
    getContractAt(
      name: "IPYieldTokenV2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IPYieldTokenV2>;
    getContractAt(
      name: "IPYieldTokenV3",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IPYieldTokenV3>;
    getContractAt(
      name: "IQiAvax",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IQiAvax>;
    getContractAt(
      name: "IQiErc20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IQiErc20>;
    getContractAt(
      name: "IQiToken",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IQiToken>;
    getContractAt(
      name: "IRewardManager",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IRewardManager>;
    getContractAt(
      name: "IStandardizedYield",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IStandardizedYield>;
    getContractAt(
      name: "IStargateLP",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IStargateLP>;
    getContractAt(
      name: "IStargateRouter",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IStargateRouter>;
    getContractAt(
      name: "IStargateStaking",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IStargateStaking>;
    getContractAt(
      name: "IStETH",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IStETH>;
    getContractAt(
      name: "ISwETH",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ISwETH>;
    getContractAt(
      name: "IWETH",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IWETH>;
    getContractAt(
      name: "IWstETH",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IWstETH>;
    getContractAt(
      name: "IEUSD",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IEUSD>;
    getContractAt(
      name: "EuphratesMsgReceiveEndpointUpg",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EuphratesMsgReceiveEndpointUpg>;
    getContractAt(
      name: "EuphratesMsgReceiverAppUpg",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EuphratesMsgReceiverAppUpg>;
    getContractAt(
      name: "EuphratesMsgSendEndpointUpg",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EuphratesMsgSendEndpointUpg>;
    getContractAt(
      name: "EuphratesMsgSenderAppUpg",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EuphratesMsgSenderAppUpg>;
    getContractAt(
      name: "EUSDMock",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EUSDMock>;
    getContractAt(
      name: "ITestERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ITestERC20>;
    getContractAt(
      name: "TestERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.TestERC20>;
    getContractAt(
      name: "AddressProvider",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AddressProvider>;
    getContractAt(
      name: "AutomateReady",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AutomateReady>;
    getContractAt(
      name: "IAutomate",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IAutomate>;
    getContractAt(
      name: "IOpsProxyFactory",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IOpsProxyFactory>;
    getContractAt(
      name: "ITaskTreasuryUpgradable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ITaskTreasuryUpgradable>;
    getContractAt(
      name: "BaseSplitCodeFactoryContract",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.BaseSplitCodeFactoryContract>;
    getContractAt(
      name: "Broadcaster",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Broadcaster>;
    getContractAt(
      name: "BulkSellerOffchain",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.BulkSellerOffchain>;
    getContractAt(
      name: "ChainlinkRelayerAutomation",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ChainlinkRelayerAutomation>;
    getContractAt(
      name: "ChainlinkRelayerGelato",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ChainlinkRelayerGelato>;
    getContractAt(
      name: "EmptyUUPS",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EmptyUUPS>;
    getContractAt(
      name: "SDKErrorsDirectory",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SDKErrorsDirectory>;
    getContractAt(
      name: "LegacyNFTHelper",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.LegacyNFTHelper>;
    getContractAt(
      name: "StarNFTV1",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.StarNFTV1>;
    getContractAt(
      name: "Multicall2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Multicall2>;
    getContractAt(
      name: "EuphratesMulticallV1",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EuphratesMulticallV1>;
    getContractAt(
      name: "EuphratesMulticallV2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EuphratesMulticallV2>;
    getContractAt(
      name: "PtAndLpToAsset",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PtAndLpToAsset>;
    getContractAt(
      name: "ActionInfoStatic",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ActionInfoStatic>;
    getContractAt(
      name: "ActionMarketAuxStatic",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ActionMarketAuxStatic>;
    getContractAt(
      name: "ActionMarketCoreStatic",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ActionMarketCoreStatic>;
    getContractAt(
      name: "ActionMintRedeemStatic",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ActionMintRedeemStatic>;
    getContractAt(
      name: "ActionStorageStatic",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ActionStorageStatic>;
    getContractAt(
      name: "EuphratesRouterStatic",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EuphratesRouterStatic>;
    getContractAt(
      name: "EuphratesPtOracle",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EuphratesPtOracle>;
    getContractAt(
      name: "ActionAddRemoveLiq",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ActionAddRemoveLiq>;
    getContractAt(
      name: "ActionMintRedeem",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ActionMintRedeem>;
    getContractAt(
      name: "ActionMisc",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ActionMisc>;
    getContractAt(
      name: "ActionSwapPT",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ActionSwapPT>;
    getContractAt(
      name: "ActionSwapYT",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ActionSwapYT>;
    getContractAt(
      name: "ActionBaseCallback",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ActionBaseCallback>;
    getContractAt(
      name: "EuphratesRouter",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EuphratesRouter>;
    getContractAt(
      name: "EuphratesRouterHelper",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EuphratesRouterHelper>;
    getContractAt(
      name: "IPSwapAggregator",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IPSwapAggregator>;
    getContractAt(
      name: "IAggregationExecutor",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IAggregationExecutor>;
    getContractAt(
      name: "IExecutorHelper",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IExecutorHelper>;
    getContractAt(
      name: "IMetaAggregationRouterV2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IMetaAggregationRouterV2>;
    getContractAt(
      name: "I1inchAggregationRouterV5",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.I1inchAggregationRouterV5>;
    getContractAt(
      name: "EuphratesSwap",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EuphratesSwap>;

    deployContract(
      name: "AutomationBase",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AutomationBase>;
    deployContract(
      name: "AutomationCompatible",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AutomationCompatible>;
    deployContract(
      name: "AggregatorInterface",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AggregatorInterface>;
    deployContract(
      name: "AggregatorV2V3Interface",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AggregatorV2V3Interface>;
    deployContract(
      name: "AggregatorV3Interface",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AggregatorV3Interface>;
    deployContract(
      name: "AutomationCompatibleInterface",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AutomationCompatibleInterface>;
    deployContract(
      name: "AccessControlUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AccessControlUpgradeable>;
    deployContract(
      name: "IAccessControlUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAccessControlUpgradeable>;
    deployContract(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Initializable>;
    deployContract(
      name: "ReentrancyGuardUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ReentrancyGuardUpgradeable>;
    deployContract(
      name: "ContextUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ContextUpgradeable>;
    deployContract(
      name: "ERC165Upgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC165Upgradeable>;
    deployContract(
      name: "IERC165Upgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC165Upgradeable>;
    deployContract(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Ownable>;
    deployContract(
      name: "IERC1822Proxiable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1822Proxiable>;
    deployContract(
      name: "IERC1967",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1967>;
    deployContract(
      name: "IERC5267",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC5267>;
    deployContract(
      name: "BeaconProxy",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.BeaconProxy>;
    deployContract(
      name: "IBeacon",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IBeacon>;
    deployContract(
      name: "ERC1967Upgrade",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1967Upgrade>;
    deployContract(
      name: "Proxy",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Proxy>;
    deployContract(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Initializable>;
    deployContract(
      name: "UUPSUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.UUPSUpgradeable>;
    deployContract(
      name: "Pausable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Pausable>;
    deployContract(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20>;
    deployContract(
      name: "ERC20Permit",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20Permit>;
    deployContract(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Metadata>;
    deployContract(
      name: "IERC20Permit",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Permit>;
    deployContract(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20>;
    deployContract(
      name: "EIP712",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EIP712>;
    deployContract(
      name: "ShortStrings",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ShortStrings>;
    deployContract(
      name: "BulkSeller",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.BulkSeller>;
    deployContract(
      name: "BulkSellerFactory",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.BulkSellerFactory>;
    deployContract(
      name: "EuphratesERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EuphratesERC20>;
    deployContract(
      name: "EuphratesERC20Permit",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EuphratesERC20Permit>;
    deployContract(
      name: "BoringOwnableUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.BoringOwnableUpgradeable>;
    deployContract(
      name: "BoringOwnableUpgradeableData",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.BoringOwnableUpgradeableData>;
    deployContract(
      name: "Errors",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Errors>;
    deployContract(
      name: "EuphratesExternalRewardDistributor",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EuphratesExternalRewardDistributor>;
    deployContract(
      name: "OracleLib",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OracleLib>;
    deployContract(
      name: "EuphratesGaugeV2",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EuphratesGaugeV2>;
    deployContract(
      name: "EuphratesMarketFactoryV2",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EuphratesMarketFactoryV2>;
    deployContract(
      name: "EuphratesMarketV2",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EuphratesMarketV2>;
    deployContract(
      name: "RewardManager",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RewardManager>;
    deployContract(
      name: "RewardManagerAbstract",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RewardManagerAbstract>;
    deployContract(
      name: "EuphratesChainlinkReceiver",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EuphratesChainlinkReceiver>;
    deployContract(
      name: "EuphratesChainlinkRelayer",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EuphratesChainlinkRelayer>;
    deployContract(
      name: "EuphratesEUSDSY",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EuphratesEUSDSY>;
    deployContract(
      name: "SYBase",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SYBase>;
    deployContract(
      name: "SYBaseWithRewards",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SYBaseWithRewards>;
    deployContract(
      name: "EuphratesPrincipalToken",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EuphratesPrincipalToken>;
    deployContract(
      name: "EuphratesYieldContractFactory",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EuphratesYieldContractFactory>;
    deployContract(
      name: "EuphratesYieldToken",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EuphratesYieldToken>;
    deployContract(
      name: "InterestManagerYT",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.InterestManagerYT>;
    deployContract(
      name: "EuphratesPrincipalTokenV2",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EuphratesPrincipalTokenV2>;
    deployContract(
      name: "EuphratesYieldContractFactoryV2",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EuphratesYieldContractFactoryV2>;
    deployContract(
      name: "EuphratesYieldTokenV2",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EuphratesYieldTokenV2>;
    deployContract(
      name: "InterestManagerYTV2",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.InterestManagerYTV2>;
    deployContract(
      name: "EuphratesPrincipalTokenV3",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EuphratesPrincipalTokenV3>;
    deployContract(
      name: "EuphratesYieldContractFactoryV3",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EuphratesYieldContractFactoryV3>;
    deployContract(
      name: "EuphratesYieldTokenV3",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EuphratesYieldTokenV3>;
    deployContract(
      name: "InterestManagerYTV3",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.InterestManagerYTV3>;
    deployContract(
      name: "IAddressProvider",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAddressProvider>;
    deployContract(
      name: "IApeStaking",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IApeStaking>;
    deployContract(
      name: "IBenQiComptroller",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IBenQiComptroller>;
    deployContract(
      name: "IBenQiInterestRateModel",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IBenQiInterestRateModel>;
    deployContract(
      name: "Iconfigurator",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Iconfigurator>;
    deployContract(
      name: "IDiamondCut",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDiamondCut>;
    deployContract(
      name: "IDiamondLoupe",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDiamondLoupe>;
    deployContract(
      name: "IERC4626",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC4626>;
    deployContract(
      name: "IEuphratesPreviewHelper",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IEuphratesPreviewHelper>;
    deployContract(
      name: "ILayerZeroEndpoint",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ILayerZeroEndpoint>;
    deployContract(
      name: "ILayerZeroReceiver",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ILayerZeroReceiver>;
    deployContract(
      name: "ILooksFeeSharing",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ILooksFeeSharing>;
    deployContract(
      name: "ILooksStaking",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ILooksStaking>;
    deployContract(
      name: "IPActionAddRemoveLiq",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPActionAddRemoveLiq>;
    deployContract(
      name: "IPActionInfoStatic",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPActionInfoStatic>;
    deployContract(
      name: "IPActionMarketAuxStatic",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPActionMarketAuxStatic>;
    deployContract(
      name: "IPActionMarketCoreStatic",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPActionMarketCoreStatic>;
    deployContract(
      name: "IPActionMintRedeem",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPActionMintRedeem>;
    deployContract(
      name: "IPActionMintRedeemStatic",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPActionMintRedeemStatic>;
    deployContract(
      name: "IPActionMisc",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPActionMisc>;
    deployContract(
      name: "IPActionStorageStatic",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPActionStorageStatic>;
    deployContract(
      name: "IPActionSwapPT",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPActionSwapPT>;
    deployContract(
      name: "IPActionSwapYT",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPActionSwapYT>;
    deployContract(
      name: "IPActionVeEuphratesStatic",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPActionVeEuphratesStatic>;
    deployContract(
      name: "IPAllAction",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPAllAction>;
    deployContract(
      name: "IPBulkSeller",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPBulkSeller>;
    deployContract(
      name: "IPBulkSellerFactory",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPBulkSellerFactory>;
    deployContract(
      name: "IPBulkSellerCallback",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPBulkSellerCallback>;
    deployContract(
      name: "IPExternalRewardDistributor",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPExternalRewardDistributor>;
    deployContract(
      name: "IPFeeDistributor",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPFeeDistributor>;
    deployContract(
      name: "IPFeeDistributorV2",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPFeeDistributorV2>;
    deployContract(
      name: "IPGauge",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPGauge>;
    deployContract(
      name: "IPInterestManagerYT",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPInterestManagerYT>;
    deployContract(
      name: "IPInterestManagerYTV2",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPInterestManagerYTV2>;
    deployContract(
      name: "IPInterestManagerYTV3",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPInterestManagerYTV3>;
    deployContract(
      name: "IPMarket",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPMarket>;
    deployContract(
      name: "IPMarketFactory",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPMarketFactory>;
    deployContract(
      name: "IPMarketFactoryV2",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPMarketFactoryV2>;
    deployContract(
      name: "IPMarketSwapCallback",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPMarketSwapCallback>;
    deployContract(
      name: "IPMiniDiamond",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPMiniDiamond>;
    deployContract(
      name: "IPMsgReceiverApp",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPMsgReceiverApp>;
    deployContract(
      name: "IPMsgSendEndpoint",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPMsgSendEndpoint>;
    deployContract(
      name: "IPOracleForSy",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPOracleForSy>;
    deployContract(
      name: "IPPrincipalToken",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPPrincipalToken>;
    deployContract(
      name: "IPPtOracle",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPPtOracle>;
    deployContract(
      name: "IPRouterHelper",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPRouterHelper>;
    deployContract(
      name: "IPRouterStatic",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPRouterStatic>;
    deployContract(
      name: "IPYieldContractFactory",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPYieldContractFactory>;
    deployContract(
      name: "IPYieldToken",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPYieldToken>;
    deployContract(
      name: "IPYieldTokenV2",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPYieldTokenV2>;
    deployContract(
      name: "IPYieldTokenV3",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPYieldTokenV3>;
    deployContract(
      name: "IQiAvax",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IQiAvax>;
    deployContract(
      name: "IQiErc20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IQiErc20>;
    deployContract(
      name: "IQiToken",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IQiToken>;
    deployContract(
      name: "IRewardManager",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IRewardManager>;
    deployContract(
      name: "IStandardizedYield",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IStandardizedYield>;
    deployContract(
      name: "IStargateLP",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IStargateLP>;
    deployContract(
      name: "IStargateRouter",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IStargateRouter>;
    deployContract(
      name: "IStargateStaking",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IStargateStaking>;
    deployContract(
      name: "IStETH",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IStETH>;
    deployContract(
      name: "ISwETH",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ISwETH>;
    deployContract(
      name: "IWETH",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IWETH>;
    deployContract(
      name: "IWstETH",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IWstETH>;
    deployContract(
      name: "IEUSD",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IEUSD>;
    deployContract(
      name: "EuphratesMsgReceiveEndpointUpg",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EuphratesMsgReceiveEndpointUpg>;
    deployContract(
      name: "EuphratesMsgReceiverAppUpg",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EuphratesMsgReceiverAppUpg>;
    deployContract(
      name: "EuphratesMsgSendEndpointUpg",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EuphratesMsgSendEndpointUpg>;
    deployContract(
      name: "EuphratesMsgSenderAppUpg",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EuphratesMsgSenderAppUpg>;
    deployContract(
      name: "EUSDMock",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EUSDMock>;
    deployContract(
      name: "ITestERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ITestERC20>;
    deployContract(
      name: "TestERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TestERC20>;
    deployContract(
      name: "AddressProvider",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AddressProvider>;
    deployContract(
      name: "AutomateReady",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AutomateReady>;
    deployContract(
      name: "IAutomate",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAutomate>;
    deployContract(
      name: "IOpsProxyFactory",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IOpsProxyFactory>;
    deployContract(
      name: "ITaskTreasuryUpgradable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ITaskTreasuryUpgradable>;
    deployContract(
      name: "BaseSplitCodeFactoryContract",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.BaseSplitCodeFactoryContract>;
    deployContract(
      name: "Broadcaster",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Broadcaster>;
    deployContract(
      name: "BulkSellerOffchain",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.BulkSellerOffchain>;
    deployContract(
      name: "ChainlinkRelayerAutomation",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ChainlinkRelayerAutomation>;
    deployContract(
      name: "ChainlinkRelayerGelato",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ChainlinkRelayerGelato>;
    deployContract(
      name: "EmptyUUPS",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EmptyUUPS>;
    deployContract(
      name: "SDKErrorsDirectory",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SDKErrorsDirectory>;
    deployContract(
      name: "LegacyNFTHelper",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LegacyNFTHelper>;
    deployContract(
      name: "StarNFTV1",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.StarNFTV1>;
    deployContract(
      name: "Multicall2",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Multicall2>;
    deployContract(
      name: "EuphratesMulticallV1",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EuphratesMulticallV1>;
    deployContract(
      name: "EuphratesMulticallV2",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EuphratesMulticallV2>;
    deployContract(
      name: "PtAndLpToAsset",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PtAndLpToAsset>;
    deployContract(
      name: "ActionInfoStatic",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ActionInfoStatic>;
    deployContract(
      name: "ActionMarketAuxStatic",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ActionMarketAuxStatic>;
    deployContract(
      name: "ActionMarketCoreStatic",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ActionMarketCoreStatic>;
    deployContract(
      name: "ActionMintRedeemStatic",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ActionMintRedeemStatic>;
    deployContract(
      name: "ActionStorageStatic",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ActionStorageStatic>;
    deployContract(
      name: "EuphratesRouterStatic",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EuphratesRouterStatic>;
    deployContract(
      name: "EuphratesPtOracle",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EuphratesPtOracle>;
    deployContract(
      name: "ActionAddRemoveLiq",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ActionAddRemoveLiq>;
    deployContract(
      name: "ActionMintRedeem",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ActionMintRedeem>;
    deployContract(
      name: "ActionMisc",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ActionMisc>;
    deployContract(
      name: "ActionSwapPT",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ActionSwapPT>;
    deployContract(
      name: "ActionSwapYT",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ActionSwapYT>;
    deployContract(
      name: "ActionBaseCallback",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ActionBaseCallback>;
    deployContract(
      name: "EuphratesRouter",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EuphratesRouter>;
    deployContract(
      name: "EuphratesRouterHelper",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EuphratesRouterHelper>;
    deployContract(
      name: "IPSwapAggregator",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPSwapAggregator>;
    deployContract(
      name: "IAggregationExecutor",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAggregationExecutor>;
    deployContract(
      name: "IExecutorHelper",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IExecutorHelper>;
    deployContract(
      name: "IMetaAggregationRouterV2",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMetaAggregationRouterV2>;
    deployContract(
      name: "I1inchAggregationRouterV5",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.I1inchAggregationRouterV5>;
    deployContract(
      name: "EuphratesSwap",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EuphratesSwap>;

    deployContract(
      name: "AutomationBase",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AutomationBase>;
    deployContract(
      name: "AutomationCompatible",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AutomationCompatible>;
    deployContract(
      name: "AggregatorInterface",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AggregatorInterface>;
    deployContract(
      name: "AggregatorV2V3Interface",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AggregatorV2V3Interface>;
    deployContract(
      name: "AggregatorV3Interface",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AggregatorV3Interface>;
    deployContract(
      name: "AutomationCompatibleInterface",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AutomationCompatibleInterface>;
    deployContract(
      name: "AccessControlUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AccessControlUpgradeable>;
    deployContract(
      name: "IAccessControlUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAccessControlUpgradeable>;
    deployContract(
      name: "Initializable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Initializable>;
    deployContract(
      name: "ReentrancyGuardUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ReentrancyGuardUpgradeable>;
    deployContract(
      name: "ContextUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ContextUpgradeable>;
    deployContract(
      name: "ERC165Upgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC165Upgradeable>;
    deployContract(
      name: "IERC165Upgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC165Upgradeable>;
    deployContract(
      name: "Ownable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Ownable>;
    deployContract(
      name: "IERC1822Proxiable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1822Proxiable>;
    deployContract(
      name: "IERC1967",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1967>;
    deployContract(
      name: "IERC5267",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC5267>;
    deployContract(
      name: "BeaconProxy",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.BeaconProxy>;
    deployContract(
      name: "IBeacon",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IBeacon>;
    deployContract(
      name: "ERC1967Upgrade",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1967Upgrade>;
    deployContract(
      name: "Proxy",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Proxy>;
    deployContract(
      name: "Initializable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Initializable>;
    deployContract(
      name: "UUPSUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.UUPSUpgradeable>;
    deployContract(
      name: "Pausable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Pausable>;
    deployContract(
      name: "ERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20>;
    deployContract(
      name: "ERC20Permit",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20Permit>;
    deployContract(
      name: "IERC20Metadata",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Metadata>;
    deployContract(
      name: "IERC20Permit",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Permit>;
    deployContract(
      name: "IERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20>;
    deployContract(
      name: "EIP712",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EIP712>;
    deployContract(
      name: "ShortStrings",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ShortStrings>;
    deployContract(
      name: "BulkSeller",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.BulkSeller>;
    deployContract(
      name: "BulkSellerFactory",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.BulkSellerFactory>;
    deployContract(
      name: "EuphratesERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EuphratesERC20>;
    deployContract(
      name: "EuphratesERC20Permit",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EuphratesERC20Permit>;
    deployContract(
      name: "BoringOwnableUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.BoringOwnableUpgradeable>;
    deployContract(
      name: "BoringOwnableUpgradeableData",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.BoringOwnableUpgradeableData>;
    deployContract(
      name: "Errors",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Errors>;
    deployContract(
      name: "EuphratesExternalRewardDistributor",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EuphratesExternalRewardDistributor>;
    deployContract(
      name: "OracleLib",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OracleLib>;
    deployContract(
      name: "EuphratesGaugeV2",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EuphratesGaugeV2>;
    deployContract(
      name: "EuphratesMarketFactoryV2",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EuphratesMarketFactoryV2>;
    deployContract(
      name: "EuphratesMarketV2",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EuphratesMarketV2>;
    deployContract(
      name: "RewardManager",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RewardManager>;
    deployContract(
      name: "RewardManagerAbstract",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RewardManagerAbstract>;
    deployContract(
      name: "EuphratesChainlinkReceiver",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EuphratesChainlinkReceiver>;
    deployContract(
      name: "EuphratesChainlinkRelayer",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EuphratesChainlinkRelayer>;
    deployContract(
      name: "EuphratesEUSDSY",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EuphratesEUSDSY>;
    deployContract(
      name: "SYBase",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SYBase>;
    deployContract(
      name: "SYBaseWithRewards",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SYBaseWithRewards>;
    deployContract(
      name: "EuphratesPrincipalToken",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EuphratesPrincipalToken>;
    deployContract(
      name: "EuphratesYieldContractFactory",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EuphratesYieldContractFactory>;
    deployContract(
      name: "EuphratesYieldToken",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EuphratesYieldToken>;
    deployContract(
      name: "InterestManagerYT",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.InterestManagerYT>;
    deployContract(
      name: "EuphratesPrincipalTokenV2",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EuphratesPrincipalTokenV2>;
    deployContract(
      name: "EuphratesYieldContractFactoryV2",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EuphratesYieldContractFactoryV2>;
    deployContract(
      name: "EuphratesYieldTokenV2",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EuphratesYieldTokenV2>;
    deployContract(
      name: "InterestManagerYTV2",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.InterestManagerYTV2>;
    deployContract(
      name: "EuphratesPrincipalTokenV3",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EuphratesPrincipalTokenV3>;
    deployContract(
      name: "EuphratesYieldContractFactoryV3",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EuphratesYieldContractFactoryV3>;
    deployContract(
      name: "EuphratesYieldTokenV3",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EuphratesYieldTokenV3>;
    deployContract(
      name: "InterestManagerYTV3",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.InterestManagerYTV3>;
    deployContract(
      name: "IAddressProvider",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAddressProvider>;
    deployContract(
      name: "IApeStaking",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IApeStaking>;
    deployContract(
      name: "IBenQiComptroller",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IBenQiComptroller>;
    deployContract(
      name: "IBenQiInterestRateModel",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IBenQiInterestRateModel>;
    deployContract(
      name: "Iconfigurator",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Iconfigurator>;
    deployContract(
      name: "IDiamondCut",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDiamondCut>;
    deployContract(
      name: "IDiamondLoupe",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDiamondLoupe>;
    deployContract(
      name: "IERC4626",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC4626>;
    deployContract(
      name: "IEuphratesPreviewHelper",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IEuphratesPreviewHelper>;
    deployContract(
      name: "ILayerZeroEndpoint",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ILayerZeroEndpoint>;
    deployContract(
      name: "ILayerZeroReceiver",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ILayerZeroReceiver>;
    deployContract(
      name: "ILooksFeeSharing",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ILooksFeeSharing>;
    deployContract(
      name: "ILooksStaking",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ILooksStaking>;
    deployContract(
      name: "IPActionAddRemoveLiq",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPActionAddRemoveLiq>;
    deployContract(
      name: "IPActionInfoStatic",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPActionInfoStatic>;
    deployContract(
      name: "IPActionMarketAuxStatic",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPActionMarketAuxStatic>;
    deployContract(
      name: "IPActionMarketCoreStatic",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPActionMarketCoreStatic>;
    deployContract(
      name: "IPActionMintRedeem",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPActionMintRedeem>;
    deployContract(
      name: "IPActionMintRedeemStatic",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPActionMintRedeemStatic>;
    deployContract(
      name: "IPActionMisc",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPActionMisc>;
    deployContract(
      name: "IPActionStorageStatic",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPActionStorageStatic>;
    deployContract(
      name: "IPActionSwapPT",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPActionSwapPT>;
    deployContract(
      name: "IPActionSwapYT",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPActionSwapYT>;
    deployContract(
      name: "IPActionVeEuphratesStatic",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPActionVeEuphratesStatic>;
    deployContract(
      name: "IPAllAction",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPAllAction>;
    deployContract(
      name: "IPBulkSeller",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPBulkSeller>;
    deployContract(
      name: "IPBulkSellerFactory",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPBulkSellerFactory>;
    deployContract(
      name: "IPBulkSellerCallback",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPBulkSellerCallback>;
    deployContract(
      name: "IPExternalRewardDistributor",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPExternalRewardDistributor>;
    deployContract(
      name: "IPFeeDistributor",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPFeeDistributor>;
    deployContract(
      name: "IPFeeDistributorV2",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPFeeDistributorV2>;
    deployContract(
      name: "IPGauge",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPGauge>;
    deployContract(
      name: "IPInterestManagerYT",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPInterestManagerYT>;
    deployContract(
      name: "IPInterestManagerYTV2",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPInterestManagerYTV2>;
    deployContract(
      name: "IPInterestManagerYTV3",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPInterestManagerYTV3>;
    deployContract(
      name: "IPMarket",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPMarket>;
    deployContract(
      name: "IPMarketFactory",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPMarketFactory>;
    deployContract(
      name: "IPMarketFactoryV2",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPMarketFactoryV2>;
    deployContract(
      name: "IPMarketSwapCallback",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPMarketSwapCallback>;
    deployContract(
      name: "IPMiniDiamond",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPMiniDiamond>;
    deployContract(
      name: "IPMsgReceiverApp",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPMsgReceiverApp>;
    deployContract(
      name: "IPMsgSendEndpoint",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPMsgSendEndpoint>;
    deployContract(
      name: "IPOracleForSy",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPOracleForSy>;
    deployContract(
      name: "IPPrincipalToken",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPPrincipalToken>;
    deployContract(
      name: "IPPtOracle",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPPtOracle>;
    deployContract(
      name: "IPRouterHelper",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPRouterHelper>;
    deployContract(
      name: "IPRouterStatic",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPRouterStatic>;
    deployContract(
      name: "IPYieldContractFactory",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPYieldContractFactory>;
    deployContract(
      name: "IPYieldToken",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPYieldToken>;
    deployContract(
      name: "IPYieldTokenV2",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPYieldTokenV2>;
    deployContract(
      name: "IPYieldTokenV3",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPYieldTokenV3>;
    deployContract(
      name: "IQiAvax",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IQiAvax>;
    deployContract(
      name: "IQiErc20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IQiErc20>;
    deployContract(
      name: "IQiToken",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IQiToken>;
    deployContract(
      name: "IRewardManager",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IRewardManager>;
    deployContract(
      name: "IStandardizedYield",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IStandardizedYield>;
    deployContract(
      name: "IStargateLP",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IStargateLP>;
    deployContract(
      name: "IStargateRouter",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IStargateRouter>;
    deployContract(
      name: "IStargateStaking",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IStargateStaking>;
    deployContract(
      name: "IStETH",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IStETH>;
    deployContract(
      name: "ISwETH",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ISwETH>;
    deployContract(
      name: "IWETH",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IWETH>;
    deployContract(
      name: "IWstETH",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IWstETH>;
    deployContract(
      name: "IEUSD",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IEUSD>;
    deployContract(
      name: "EuphratesMsgReceiveEndpointUpg",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EuphratesMsgReceiveEndpointUpg>;
    deployContract(
      name: "EuphratesMsgReceiverAppUpg",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EuphratesMsgReceiverAppUpg>;
    deployContract(
      name: "EuphratesMsgSendEndpointUpg",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EuphratesMsgSendEndpointUpg>;
    deployContract(
      name: "EuphratesMsgSenderAppUpg",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EuphratesMsgSenderAppUpg>;
    deployContract(
      name: "EUSDMock",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EUSDMock>;
    deployContract(
      name: "ITestERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ITestERC20>;
    deployContract(
      name: "TestERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TestERC20>;
    deployContract(
      name: "AddressProvider",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AddressProvider>;
    deployContract(
      name: "AutomateReady",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AutomateReady>;
    deployContract(
      name: "IAutomate",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAutomate>;
    deployContract(
      name: "IOpsProxyFactory",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IOpsProxyFactory>;
    deployContract(
      name: "ITaskTreasuryUpgradable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ITaskTreasuryUpgradable>;
    deployContract(
      name: "BaseSplitCodeFactoryContract",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.BaseSplitCodeFactoryContract>;
    deployContract(
      name: "Broadcaster",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Broadcaster>;
    deployContract(
      name: "BulkSellerOffchain",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.BulkSellerOffchain>;
    deployContract(
      name: "ChainlinkRelayerAutomation",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ChainlinkRelayerAutomation>;
    deployContract(
      name: "ChainlinkRelayerGelato",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ChainlinkRelayerGelato>;
    deployContract(
      name: "EmptyUUPS",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EmptyUUPS>;
    deployContract(
      name: "SDKErrorsDirectory",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SDKErrorsDirectory>;
    deployContract(
      name: "LegacyNFTHelper",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LegacyNFTHelper>;
    deployContract(
      name: "StarNFTV1",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.StarNFTV1>;
    deployContract(
      name: "Multicall2",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Multicall2>;
    deployContract(
      name: "EuphratesMulticallV1",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EuphratesMulticallV1>;
    deployContract(
      name: "EuphratesMulticallV2",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EuphratesMulticallV2>;
    deployContract(
      name: "PtAndLpToAsset",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PtAndLpToAsset>;
    deployContract(
      name: "ActionInfoStatic",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ActionInfoStatic>;
    deployContract(
      name: "ActionMarketAuxStatic",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ActionMarketAuxStatic>;
    deployContract(
      name: "ActionMarketCoreStatic",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ActionMarketCoreStatic>;
    deployContract(
      name: "ActionMintRedeemStatic",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ActionMintRedeemStatic>;
    deployContract(
      name: "ActionStorageStatic",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ActionStorageStatic>;
    deployContract(
      name: "EuphratesRouterStatic",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EuphratesRouterStatic>;
    deployContract(
      name: "EuphratesPtOracle",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EuphratesPtOracle>;
    deployContract(
      name: "ActionAddRemoveLiq",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ActionAddRemoveLiq>;
    deployContract(
      name: "ActionMintRedeem",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ActionMintRedeem>;
    deployContract(
      name: "ActionMisc",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ActionMisc>;
    deployContract(
      name: "ActionSwapPT",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ActionSwapPT>;
    deployContract(
      name: "ActionSwapYT",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ActionSwapYT>;
    deployContract(
      name: "ActionBaseCallback",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ActionBaseCallback>;
    deployContract(
      name: "EuphratesRouter",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EuphratesRouter>;
    deployContract(
      name: "EuphratesRouterHelper",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EuphratesRouterHelper>;
    deployContract(
      name: "IPSwapAggregator",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPSwapAggregator>;
    deployContract(
      name: "IAggregationExecutor",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAggregationExecutor>;
    deployContract(
      name: "IExecutorHelper",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IExecutorHelper>;
    deployContract(
      name: "IMetaAggregationRouterV2",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMetaAggregationRouterV2>;
    deployContract(
      name: "I1inchAggregationRouterV5",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.I1inchAggregationRouterV5>;
    deployContract(
      name: "EuphratesSwap",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EuphratesSwap>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
  }
}
